// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

package org.kontalk.client;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public enum Status
      implements com.google.protobuf.Internal.EnumLite {
    STATUS_SUCCESS(0, 0),
    STATUS_ERROR(1, 1),
    STATUS_BUSY(2, 2),
    STATUS_VERIFICATION_FAILED(3, 3),
    STATUS_INVALID_PHONE_NUMBER(4, 4),
    STATUS_TTL_EXPIRED(5, 5),
    STATUS_USER_NOTFOUND(6, 6),
    STATUS_MESSAGE_NOTFOUND(7, 7),
    ;
    
    public static final int STATUS_SUCCESS_VALUE = 0;
    public static final int STATUS_ERROR_VALUE = 1;
    public static final int STATUS_BUSY_VALUE = 2;
    public static final int STATUS_VERIFICATION_FAILED_VALUE = 3;
    public static final int STATUS_INVALID_PHONE_NUMBER_VALUE = 4;
    public static final int STATUS_TTL_EXPIRED_VALUE = 5;
    public static final int STATUS_USER_NOTFOUND_VALUE = 6;
    public static final int STATUS_MESSAGE_NOTFOUND_VALUE = 7;
    
    
    public final int getNumber() { return value; }
    
    public static Status valueOf(int value) {
      switch (value) {
        case 0: return STATUS_SUCCESS;
        case 1: return STATUS_ERROR;
        case 2: return STATUS_BUSY;
        case 3: return STATUS_VERIFICATION_FAILED;
        case 4: return STATUS_INVALID_PHONE_NUMBER;
        case 5: return STATUS_TTL_EXPIRED;
        case 6: return STATUS_USER_NOTFOUND;
        case 7: return STATUS_MESSAGE_NOTFOUND;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.valueOf(number);
            }
          };
    
    private final int value;
    
    private Status(int index, int value) {
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:Status)
  }
  
  public interface ServerInfoOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string version = 1;
    boolean hasVersion();
    String getVersion();
    
    // required uint32 client_protocol = 2;
    boolean hasClientProtocol();
    int getClientProtocol();
    
    // required uint32 server_protocol = 3;
    boolean hasServerProtocol();
    int getServerProtocol();
    
    // required string fingerprint = 4;
    boolean hasFingerprint();
    String getFingerprint();
    
    // repeated string supports = 5;
    java.util.List<String> getSupportsList();
    int getSupportsCount();
    String getSupports(int index);
  }
  public static final class ServerInfo extends
      com.google.protobuf.GeneratedMessageLite
      implements ServerInfoOrBuilder {
    // Use ServerInfo.newBuilder() to construct.
    private ServerInfo(Builder builder) {
      super(builder);
    }
    private ServerInfo(boolean noInit) {}
    
    private static final ServerInfo defaultInstance;
    public static ServerInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ServerInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private java.lang.Object version_;
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          version_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required uint32 client_protocol = 2;
    public static final int CLIENT_PROTOCOL_FIELD_NUMBER = 2;
    private int clientProtocol_;
    public boolean hasClientProtocol() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getClientProtocol() {
      return clientProtocol_;
    }
    
    // required uint32 server_protocol = 3;
    public static final int SERVER_PROTOCOL_FIELD_NUMBER = 3;
    private int serverProtocol_;
    public boolean hasServerProtocol() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getServerProtocol() {
      return serverProtocol_;
    }
    
    // required string fingerprint = 4;
    public static final int FINGERPRINT_FIELD_NUMBER = 4;
    private java.lang.Object fingerprint_;
    public boolean hasFingerprint() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getFingerprint() {
      java.lang.Object ref = fingerprint_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          fingerprint_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFingerprintBytes() {
      java.lang.Object ref = fingerprint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        fingerprint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated string supports = 5;
    public static final int SUPPORTS_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList supports_;
    public java.util.List<String>
        getSupportsList() {
      return supports_;
    }
    public int getSupportsCount() {
      return supports_.size();
    }
    public String getSupports(int index) {
      return supports_.get(index);
    }
    
    private void initFields() {
      version_ = "";
      clientProtocol_ = 0;
      serverProtocol_ = 0;
      fingerprint_ = "";
      supports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientProtocol()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerProtocol()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getVersionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, clientProtocol_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, serverProtocol_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFingerprintBytes());
      }
      for (int i = 0; i < supports_.size(); i++) {
        output.writeBytes(5, supports_.getByteString(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getVersionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, clientProtocol_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, serverProtocol_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getFingerprintBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < supports_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(supports_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getSupportsList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.ServerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.ServerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ServerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.ServerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ServerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.ServerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ServerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.ServerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.ServerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.ServerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.ServerInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.ServerInfo, Builder>
        implements org.kontalk.client.Protocol.ServerInfoOrBuilder {
      // Construct using org.kontalk.client.Protocol.ServerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        clientProtocol_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        serverProtocol_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        fingerprint_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        supports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.ServerInfo getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.ServerInfo.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.ServerInfo build() {
        org.kontalk.client.Protocol.ServerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.ServerInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.ServerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.ServerInfo buildPartial() {
        org.kontalk.client.Protocol.ServerInfo result = new org.kontalk.client.Protocol.ServerInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientProtocol_ = clientProtocol_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serverProtocol_ = serverProtocol_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fingerprint_ = fingerprint_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          supports_ = new com.google.protobuf.UnmodifiableLazyStringList(
              supports_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.supports_ = supports_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.ServerInfo other) {
        if (other == org.kontalk.client.Protocol.ServerInfo.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasClientProtocol()) {
          setClientProtocol(other.getClientProtocol());
        }
        if (other.hasServerProtocol()) {
          setServerProtocol(other.getServerProtocol());
        }
        if (other.hasFingerprint()) {
          setFingerprint(other.getFingerprint());
        }
        if (!other.supports_.isEmpty()) {
          if (supports_.isEmpty()) {
            supports_ = other.supports_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSupportsIsMutable();
            supports_.addAll(other.supports_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasClientProtocol()) {
          
          return false;
        }
        if (!hasServerProtocol()) {
          
          return false;
        }
        if (!hasFingerprint()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              version_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              clientProtocol_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              serverProtocol_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              fingerprint_ = input.readBytes();
              break;
            }
            case 42: {
              ensureSupportsIsMutable();
              supports_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string version = 1;
      private java.lang.Object version_ = "";
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        version_ = value;
        
        return this;
      }
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = getDefaultInstance().getVersion();
        
        return this;
      }
      void setVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        
      }
      
      // required uint32 client_protocol = 2;
      private int clientProtocol_ ;
      public boolean hasClientProtocol() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getClientProtocol() {
        return clientProtocol_;
      }
      public Builder setClientProtocol(int value) {
        bitField0_ |= 0x00000002;
        clientProtocol_ = value;
        
        return this;
      }
      public Builder clearClientProtocol() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientProtocol_ = 0;
        
        return this;
      }
      
      // required uint32 server_protocol = 3;
      private int serverProtocol_ ;
      public boolean hasServerProtocol() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getServerProtocol() {
        return serverProtocol_;
      }
      public Builder setServerProtocol(int value) {
        bitField0_ |= 0x00000004;
        serverProtocol_ = value;
        
        return this;
      }
      public Builder clearServerProtocol() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serverProtocol_ = 0;
        
        return this;
      }
      
      // required string fingerprint = 4;
      private java.lang.Object fingerprint_ = "";
      public boolean hasFingerprint() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getFingerprint() {
        java.lang.Object ref = fingerprint_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          fingerprint_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFingerprint(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        fingerprint_ = value;
        
        return this;
      }
      public Builder clearFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fingerprint_ = getDefaultInstance().getFingerprint();
        
        return this;
      }
      void setFingerprint(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        fingerprint_ = value;
        
      }
      
      // repeated string supports = 5;
      private com.google.protobuf.LazyStringList supports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSupportsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          supports_ = new com.google.protobuf.LazyStringArrayList(supports_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<String>
          getSupportsList() {
        return java.util.Collections.unmodifiableList(supports_);
      }
      public int getSupportsCount() {
        return supports_.size();
      }
      public String getSupports(int index) {
        return supports_.get(index);
      }
      public Builder setSupports(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSupportsIsMutable();
        supports_.set(index, value);
        
        return this;
      }
      public Builder addSupports(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSupportsIsMutable();
        supports_.add(value);
        
        return this;
      }
      public Builder addAllSupports(
          java.lang.Iterable<String> values) {
        ensureSupportsIsMutable();
        super.addAll(values, supports_);
        
        return this;
      }
      public Builder clearSupports() {
        supports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        
        return this;
      }
      void addSupports(com.google.protobuf.ByteString value) {
        ensureSupportsIsMutable();
        supports_.add(value);
        
      }
      
      // @@protoc_insertion_point(builder_scope:ServerInfo)
    }
    
    static {
      defaultInstance = new ServerInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ServerInfo)
  }
  
  public interface PhoneValidationOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .Status status = 1;
    boolean hasStatus();
    org.kontalk.client.Protocol.Status getStatus();
    
    // optional string sms_from = 2;
    boolean hasSmsFrom();
    String getSmsFrom();
  }
  public static final class PhoneValidation extends
      com.google.protobuf.GeneratedMessageLite
      implements PhoneValidationOrBuilder {
    // Use PhoneValidation.newBuilder() to construct.
    private PhoneValidation(Builder builder) {
      super(builder);
    }
    private PhoneValidation(boolean noInit) {}
    
    private static final PhoneValidation defaultInstance;
    public static PhoneValidation getDefaultInstance() {
      return defaultInstance;
    }
    
    public PhoneValidation getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .Status status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.kontalk.client.Protocol.Status status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.kontalk.client.Protocol.Status getStatus() {
      return status_;
    }
    
    // optional string sms_from = 2;
    public static final int SMS_FROM_FIELD_NUMBER = 2;
    private java.lang.Object smsFrom_;
    public boolean hasSmsFrom() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getSmsFrom() {
      java.lang.Object ref = smsFrom_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          smsFrom_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSmsFromBytes() {
      java.lang.Object ref = smsFrom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        smsFrom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
      smsFrom_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSmsFromBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSmsFromBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.PhoneValidation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.PhoneValidation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.PhoneValidation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.PhoneValidation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.PhoneValidation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.PhoneValidation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.PhoneValidation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.PhoneValidation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.PhoneValidation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.PhoneValidation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.PhoneValidation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.PhoneValidation, Builder>
        implements org.kontalk.client.Protocol.PhoneValidationOrBuilder {
      // Construct using org.kontalk.client.Protocol.PhoneValidation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        smsFrom_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.PhoneValidation getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.PhoneValidation.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.PhoneValidation build() {
        org.kontalk.client.Protocol.PhoneValidation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.PhoneValidation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.PhoneValidation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.PhoneValidation buildPartial() {
        org.kontalk.client.Protocol.PhoneValidation result = new org.kontalk.client.Protocol.PhoneValidation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.smsFrom_ = smsFrom_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.PhoneValidation other) {
        if (other == org.kontalk.client.Protocol.PhoneValidation.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasSmsFrom()) {
          setSmsFrom(other.getSmsFrom());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.kontalk.client.Protocol.Status value = org.kontalk.client.Protocol.Status.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              smsFrom_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .Status status = 1;
      private org.kontalk.client.Protocol.Status status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.kontalk.client.Protocol.Status getStatus() {
        return status_;
      }
      public Builder setStatus(org.kontalk.client.Protocol.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
        
        return this;
      }
      
      // optional string sms_from = 2;
      private java.lang.Object smsFrom_ = "";
      public boolean hasSmsFrom() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getSmsFrom() {
        java.lang.Object ref = smsFrom_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          smsFrom_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSmsFrom(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        smsFrom_ = value;
        
        return this;
      }
      public Builder clearSmsFrom() {
        bitField0_ = (bitField0_ & ~0x00000002);
        smsFrom_ = getDefaultInstance().getSmsFrom();
        
        return this;
      }
      void setSmsFrom(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        smsFrom_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:PhoneValidation)
    }
    
    static {
      defaultInstance = new PhoneValidation(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:PhoneValidation)
  }
  
  public interface AuthenticationOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .Status status = 1;
    boolean hasStatus();
    org.kontalk.client.Protocol.Status getStatus();
    
    // optional string token = 2;
    boolean hasToken();
    String getToken();
  }
  public static final class Authentication extends
      com.google.protobuf.GeneratedMessageLite
      implements AuthenticationOrBuilder {
    // Use Authentication.newBuilder() to construct.
    private Authentication(Builder builder) {
      super(builder);
    }
    private Authentication(boolean noInit) {}
    
    private static final Authentication defaultInstance;
    public static Authentication getDefaultInstance() {
      return defaultInstance;
    }
    
    public Authentication getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .Status status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.kontalk.client.Protocol.Status status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.kontalk.client.Protocol.Status getStatus() {
      return status_;
    }
    
    // optional string token = 2;
    public static final int TOKEN_FIELD_NUMBER = 2;
    private java.lang.Object token_;
    public boolean hasToken() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          token_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
      token_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTokenBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTokenBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.Authentication parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.Authentication parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.Authentication parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.Authentication parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.Authentication parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.Authentication parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.Authentication parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.Authentication parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.Authentication parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.Authentication parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.Authentication prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.Authentication, Builder>
        implements org.kontalk.client.Protocol.AuthenticationOrBuilder {
      // Construct using org.kontalk.client.Protocol.Authentication.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        token_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.Authentication getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.Authentication.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.Authentication build() {
        org.kontalk.client.Protocol.Authentication result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.Authentication buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.Authentication result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.Authentication buildPartial() {
        org.kontalk.client.Protocol.Authentication result = new org.kontalk.client.Protocol.Authentication(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.token_ = token_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.Authentication other) {
        if (other == org.kontalk.client.Protocol.Authentication.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.kontalk.client.Protocol.Status value = org.kontalk.client.Protocol.Status.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              token_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .Status status = 1;
      private org.kontalk.client.Protocol.Status status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.kontalk.client.Protocol.Status getStatus() {
        return status_;
      }
      public Builder setStatus(org.kontalk.client.Protocol.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
        
        return this;
      }
      
      // optional string token = 2;
      private java.lang.Object token_ = "";
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setToken(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        token_ = value;
        
        return this;
      }
      public Builder clearToken() {
        bitField0_ = (bitField0_ & ~0x00000002);
        token_ = getDefaultInstance().getToken();
        
        return this;
      }
      void setToken(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        token_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:Authentication)
    }
    
    static {
      defaultInstance = new Authentication(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Authentication)
  }
  
  public interface ReceivedOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .ReceivedEntry entry = 1;
    java.util.List<org.kontalk.client.Protocol.ReceivedEntry> 
        getEntryList();
    org.kontalk.client.Protocol.ReceivedEntry getEntry(int index);
    int getEntryCount();
  }
  public static final class Received extends
      com.google.protobuf.GeneratedMessageLite
      implements ReceivedOrBuilder {
    // Use Received.newBuilder() to construct.
    private Received(Builder builder) {
      super(builder);
    }
    private Received(boolean noInit) {}
    
    private static final Received defaultInstance;
    public static Received getDefaultInstance() {
      return defaultInstance;
    }
    
    public Received getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .ReceivedEntry entry = 1;
    public static final int ENTRY_FIELD_NUMBER = 1;
    private java.util.List<org.kontalk.client.Protocol.ReceivedEntry> entry_;
    public java.util.List<org.kontalk.client.Protocol.ReceivedEntry> getEntryList() {
      return entry_;
    }
    public java.util.List<? extends org.kontalk.client.Protocol.ReceivedEntryOrBuilder> 
        getEntryOrBuilderList() {
      return entry_;
    }
    public int getEntryCount() {
      return entry_.size();
    }
    public org.kontalk.client.Protocol.ReceivedEntry getEntry(int index) {
      return entry_.get(index);
    }
    public org.kontalk.client.Protocol.ReceivedEntryOrBuilder getEntryOrBuilder(
        int index) {
      return entry_.get(index);
    }
    
    private void initFields() {
      entry_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getEntryCount(); i++) {
        if (!getEntry(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < entry_.size(); i++) {
        output.writeMessage(1, entry_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < entry_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entry_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.Received parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.Received parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.Received parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.Received parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.Received parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.Received parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.Received parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.Received parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.Received parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.Received parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.Received prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.Received, Builder>
        implements org.kontalk.client.Protocol.ReceivedOrBuilder {
      // Construct using org.kontalk.client.Protocol.Received.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.Received getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.Received.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.Received build() {
        org.kontalk.client.Protocol.Received result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.Received buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.Received result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.Received buildPartial() {
        org.kontalk.client.Protocol.Received result = new org.kontalk.client.Protocol.Received(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = java.util.Collections.unmodifiableList(entry_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.entry_ = entry_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.Received other) {
        if (other == org.kontalk.client.Protocol.Received.getDefaultInstance()) return this;
        if (!other.entry_.isEmpty()) {
          if (entry_.isEmpty()) {
            entry_ = other.entry_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEntryIsMutable();
            entry_.addAll(other.entry_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getEntryCount(); i++) {
          if (!getEntry(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              org.kontalk.client.Protocol.ReceivedEntry.Builder subBuilder = org.kontalk.client.Protocol.ReceivedEntry.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEntry(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .ReceivedEntry entry = 1;
      private java.util.List<org.kontalk.client.Protocol.ReceivedEntry> entry_ =
        java.util.Collections.emptyList();
      private void ensureEntryIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = new java.util.ArrayList<org.kontalk.client.Protocol.ReceivedEntry>(entry_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<org.kontalk.client.Protocol.ReceivedEntry> getEntryList() {
        return java.util.Collections.unmodifiableList(entry_);
      }
      public int getEntryCount() {
        return entry_.size();
      }
      public org.kontalk.client.Protocol.ReceivedEntry getEntry(int index) {
        return entry_.get(index);
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.ReceivedEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.set(index, value);
        
        return this;
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.ReceivedEntry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addEntry(org.kontalk.client.Protocol.ReceivedEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(value);
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.ReceivedEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(index, value);
        
        return this;
      }
      public Builder addEntry(
          org.kontalk.client.Protocol.ReceivedEntry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(builderForValue.build());
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.ReceivedEntry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllEntry(
          java.lang.Iterable<? extends org.kontalk.client.Protocol.ReceivedEntry> values) {
        ensureEntryIsMutable();
        super.addAll(values, entry_);
        
        return this;
      }
      public Builder clearEntry() {
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeEntry(int index) {
        ensureEntryIsMutable();
        entry_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Received)
    }
    
    static {
      defaultInstance = new Received(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Received)
  }
  
  public interface ReceivedEntryOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .Status status = 1;
    boolean hasStatus();
    org.kontalk.client.Protocol.Status getStatus();
    
    // required string message_id = 2;
    boolean hasMessageId();
    String getMessageId();
  }
  public static final class ReceivedEntry extends
      com.google.protobuf.GeneratedMessageLite
      implements ReceivedEntryOrBuilder {
    // Use ReceivedEntry.newBuilder() to construct.
    private ReceivedEntry(Builder builder) {
      super(builder);
    }
    private ReceivedEntry(boolean noInit) {}
    
    private static final ReceivedEntry defaultInstance;
    public static ReceivedEntry getDefaultInstance() {
      return defaultInstance;
    }
    
    public ReceivedEntry getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .Status status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.kontalk.client.Protocol.Status status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.kontalk.client.Protocol.Status getStatus() {
      return status_;
    }
    
    // required string message_id = 2;
    public static final int MESSAGE_ID_FIELD_NUMBER = 2;
    private java.lang.Object messageId_;
    public boolean hasMessageId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMessageId() {
      java.lang.Object ref = messageId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          messageId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageIdBytes() {
      java.lang.Object ref = messageId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        messageId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
      messageId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMessageId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMessageIdBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMessageIdBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.ReceivedEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceivedEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceivedEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceivedEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceivedEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceivedEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceivedEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.ReceivedEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.ReceivedEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceivedEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.ReceivedEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.ReceivedEntry, Builder>
        implements org.kontalk.client.Protocol.ReceivedEntryOrBuilder {
      // Construct using org.kontalk.client.Protocol.ReceivedEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        messageId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.ReceivedEntry getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.ReceivedEntry.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.ReceivedEntry build() {
        org.kontalk.client.Protocol.ReceivedEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.ReceivedEntry buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.ReceivedEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.ReceivedEntry buildPartial() {
        org.kontalk.client.Protocol.ReceivedEntry result = new org.kontalk.client.Protocol.ReceivedEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.messageId_ = messageId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.ReceivedEntry other) {
        if (other == org.kontalk.client.Protocol.ReceivedEntry.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasMessageId()) {
          setMessageId(other.getMessageId());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasMessageId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.kontalk.client.Protocol.Status value = org.kontalk.client.Protocol.Status.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              messageId_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .Status status = 1;
      private org.kontalk.client.Protocol.Status status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.kontalk.client.Protocol.Status getStatus() {
        return status_;
      }
      public Builder setStatus(org.kontalk.client.Protocol.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
        
        return this;
      }
      
      // required string message_id = 2;
      private java.lang.Object messageId_ = "";
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMessageId() {
        java.lang.Object ref = messageId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          messageId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessageId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        messageId_ = value;
        
        return this;
      }
      public Builder clearMessageId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        messageId_ = getDefaultInstance().getMessageId();
        
        return this;
      }
      void setMessageId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        messageId_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:ReceivedEntry)
    }
    
    static {
      defaultInstance = new ReceivedEntry(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ReceivedEntry)
  }
  
  public interface MessageSentOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .MessageSentEntry entry = 1;
    java.util.List<org.kontalk.client.Protocol.MessageSentEntry> 
        getEntryList();
    org.kontalk.client.Protocol.MessageSentEntry getEntry(int index);
    int getEntryCount();
  }
  public static final class MessageSent extends
      com.google.protobuf.GeneratedMessageLite
      implements MessageSentOrBuilder {
    // Use MessageSent.newBuilder() to construct.
    private MessageSent(Builder builder) {
      super(builder);
    }
    private MessageSent(boolean noInit) {}
    
    private static final MessageSent defaultInstance;
    public static MessageSent getDefaultInstance() {
      return defaultInstance;
    }
    
    public MessageSent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .MessageSentEntry entry = 1;
    public static final int ENTRY_FIELD_NUMBER = 1;
    private java.util.List<org.kontalk.client.Protocol.MessageSentEntry> entry_;
    public java.util.List<org.kontalk.client.Protocol.MessageSentEntry> getEntryList() {
      return entry_;
    }
    public java.util.List<? extends org.kontalk.client.Protocol.MessageSentEntryOrBuilder> 
        getEntryOrBuilderList() {
      return entry_;
    }
    public int getEntryCount() {
      return entry_.size();
    }
    public org.kontalk.client.Protocol.MessageSentEntry getEntry(int index) {
      return entry_.get(index);
    }
    public org.kontalk.client.Protocol.MessageSentEntryOrBuilder getEntryOrBuilder(
        int index) {
      return entry_.get(index);
    }
    
    private void initFields() {
      entry_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getEntryCount(); i++) {
        if (!getEntry(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < entry_.size(); i++) {
        output.writeMessage(1, entry_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < entry_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entry_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.MessageSent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessageSent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessageSent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.MessageSent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.MessageSent, Builder>
        implements org.kontalk.client.Protocol.MessageSentOrBuilder {
      // Construct using org.kontalk.client.Protocol.MessageSent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.MessageSent getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.MessageSent.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.MessageSent build() {
        org.kontalk.client.Protocol.MessageSent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.MessageSent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.MessageSent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.MessageSent buildPartial() {
        org.kontalk.client.Protocol.MessageSent result = new org.kontalk.client.Protocol.MessageSent(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = java.util.Collections.unmodifiableList(entry_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.entry_ = entry_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.MessageSent other) {
        if (other == org.kontalk.client.Protocol.MessageSent.getDefaultInstance()) return this;
        if (!other.entry_.isEmpty()) {
          if (entry_.isEmpty()) {
            entry_ = other.entry_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEntryIsMutable();
            entry_.addAll(other.entry_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getEntryCount(); i++) {
          if (!getEntry(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              org.kontalk.client.Protocol.MessageSentEntry.Builder subBuilder = org.kontalk.client.Protocol.MessageSentEntry.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEntry(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .MessageSentEntry entry = 1;
      private java.util.List<org.kontalk.client.Protocol.MessageSentEntry> entry_ =
        java.util.Collections.emptyList();
      private void ensureEntryIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = new java.util.ArrayList<org.kontalk.client.Protocol.MessageSentEntry>(entry_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<org.kontalk.client.Protocol.MessageSentEntry> getEntryList() {
        return java.util.Collections.unmodifiableList(entry_);
      }
      public int getEntryCount() {
        return entry_.size();
      }
      public org.kontalk.client.Protocol.MessageSentEntry getEntry(int index) {
        return entry_.get(index);
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.MessageSentEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.set(index, value);
        
        return this;
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.MessageSentEntry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addEntry(org.kontalk.client.Protocol.MessageSentEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(value);
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.MessageSentEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(index, value);
        
        return this;
      }
      public Builder addEntry(
          org.kontalk.client.Protocol.MessageSentEntry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(builderForValue.build());
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.MessageSentEntry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllEntry(
          java.lang.Iterable<? extends org.kontalk.client.Protocol.MessageSentEntry> values) {
        ensureEntryIsMutable();
        super.addAll(values, entry_);
        
        return this;
      }
      public Builder clearEntry() {
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeEntry(int index) {
        ensureEntryIsMutable();
        entry_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MessageSent)
    }
    
    static {
      defaultInstance = new MessageSent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MessageSent)
  }
  
  public interface MessageSentEntryOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .Status status = 1;
    boolean hasStatus();
    org.kontalk.client.Protocol.Status getStatus();
    
    // required string user_id = 2;
    boolean hasUserId();
    String getUserId();
    
    // optional string message_id = 3;
    boolean hasMessageId();
    String getMessageId();
  }
  public static final class MessageSentEntry extends
      com.google.protobuf.GeneratedMessageLite
      implements MessageSentEntryOrBuilder {
    // Use MessageSentEntry.newBuilder() to construct.
    private MessageSentEntry(Builder builder) {
      super(builder);
    }
    private MessageSentEntry(boolean noInit) {}
    
    private static final MessageSentEntry defaultInstance;
    public static MessageSentEntry getDefaultInstance() {
      return defaultInstance;
    }
    
    public MessageSentEntry getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .Status status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.kontalk.client.Protocol.Status status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.kontalk.client.Protocol.Status getStatus() {
      return status_;
    }
    
    // required string user_id = 2;
    public static final int USER_ID_FIELD_NUMBER = 2;
    private java.lang.Object userId_;
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          userId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string message_id = 3;
    public static final int MESSAGE_ID_FIELD_NUMBER = 3;
    private java.lang.Object messageId_;
    public boolean hasMessageId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getMessageId() {
      java.lang.Object ref = messageId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          messageId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageIdBytes() {
      java.lang.Object ref = messageId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        messageId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
      userId_ = "";
      messageId_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMessageIdBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMessageIdBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.MessageSentEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSentEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSentEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSentEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSentEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSentEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSentEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessageSentEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessageSentEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageSentEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.MessageSentEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.MessageSentEntry, Builder>
        implements org.kontalk.client.Protocol.MessageSentEntryOrBuilder {
      // Construct using org.kontalk.client.Protocol.MessageSentEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        messageId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.MessageSentEntry getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.MessageSentEntry.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.MessageSentEntry build() {
        org.kontalk.client.Protocol.MessageSentEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.MessageSentEntry buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.MessageSentEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.MessageSentEntry buildPartial() {
        org.kontalk.client.Protocol.MessageSentEntry result = new org.kontalk.client.Protocol.MessageSentEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.messageId_ = messageId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.MessageSentEntry other) {
        if (other == org.kontalk.client.Protocol.MessageSentEntry.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasMessageId()) {
          setMessageId(other.getMessageId());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.kontalk.client.Protocol.Status value = org.kontalk.client.Protocol.Status.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              userId_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              messageId_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .Status status = 1;
      private org.kontalk.client.Protocol.Status status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.kontalk.client.Protocol.Status getStatus() {
        return status_;
      }
      public Builder setStatus(org.kontalk.client.Protocol.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = org.kontalk.client.Protocol.Status.STATUS_SUCCESS;
        
        return this;
      }
      
      // required string user_id = 2;
      private java.lang.Object userId_ = "";
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUserId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = getDefaultInstance().getUserId();
        
        return this;
      }
      void setUserId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        
      }
      
      // optional string message_id = 3;
      private java.lang.Object messageId_ = "";
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getMessageId() {
        java.lang.Object ref = messageId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          messageId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessageId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        messageId_ = value;
        
        return this;
      }
      public Builder clearMessageId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        messageId_ = getDefaultInstance().getMessageId();
        
        return this;
      }
      void setMessageId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        messageId_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:MessageSentEntry)
    }
    
    static {
      defaultInstance = new MessageSentEntry(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MessageSentEntry)
  }
  
  public interface LookupRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated string user_id = 1;
    java.util.List<String> getUserIdList();
    int getUserIdCount();
    String getUserId(int index);
  }
  public static final class LookupRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements LookupRequestOrBuilder {
    // Use LookupRequest.newBuilder() to construct.
    private LookupRequest(Builder builder) {
      super(builder);
    }
    private LookupRequest(boolean noInit) {}
    
    private static final LookupRequest defaultInstance;
    public static LookupRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public LookupRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated string user_id = 1;
    public static final int USER_ID_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList userId_;
    public java.util.List<String>
        getUserIdList() {
      return userId_;
    }
    public int getUserIdCount() {
      return userId_.size();
    }
    public String getUserId(int index) {
      return userId_.get(index);
    }
    
    private void initFields() {
      userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < userId_.size(); i++) {
        output.writeBytes(1, userId_.getByteString(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < userId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(userId_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getUserIdList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.LookupRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.LookupRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.LookupRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.LookupRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.LookupRequest, Builder>
        implements org.kontalk.client.Protocol.LookupRequestOrBuilder {
      // Construct using org.kontalk.client.Protocol.LookupRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.LookupRequest getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.LookupRequest.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.LookupRequest build() {
        org.kontalk.client.Protocol.LookupRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.LookupRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.LookupRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.LookupRequest buildPartial() {
        org.kontalk.client.Protocol.LookupRequest result = new org.kontalk.client.Protocol.LookupRequest(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          userId_ = new com.google.protobuf.UnmodifiableLazyStringList(
              userId_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.userId_ = userId_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.LookupRequest other) {
        if (other == org.kontalk.client.Protocol.LookupRequest.getDefaultInstance()) return this;
        if (!other.userId_.isEmpty()) {
          if (userId_.isEmpty()) {
            userId_ = other.userId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUserIdIsMutable();
            userId_.addAll(other.userId_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              ensureUserIdIsMutable();
              userId_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated string user_id = 1;
      private com.google.protobuf.LazyStringList userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureUserIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          userId_ = new com.google.protobuf.LazyStringArrayList(userId_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<String>
          getUserIdList() {
        return java.util.Collections.unmodifiableList(userId_);
      }
      public int getUserIdCount() {
        return userId_.size();
      }
      public String getUserId(int index) {
        return userId_.get(index);
      }
      public Builder setUserId(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdIsMutable();
        userId_.set(index, value);
        
        return this;
      }
      public Builder addUserId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureUserIdIsMutable();
        userId_.add(value);
        
        return this;
      }
      public Builder addAllUserId(
          java.lang.Iterable<String> values) {
        ensureUserIdIsMutable();
        super.addAll(values, userId_);
        
        return this;
      }
      public Builder clearUserId() {
        userId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      void addUserId(com.google.protobuf.ByteString value) {
        ensureUserIdIsMutable();
        userId_.add(value);
        
      }
      
      // @@protoc_insertion_point(builder_scope:LookupRequest)
    }
    
    static {
      defaultInstance = new LookupRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:LookupRequest)
  }
  
  public interface LookupResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .LookupResponseEntry entry = 1;
    java.util.List<org.kontalk.client.Protocol.LookupResponseEntry> 
        getEntryList();
    org.kontalk.client.Protocol.LookupResponseEntry getEntry(int index);
    int getEntryCount();
  }
  public static final class LookupResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements LookupResponseOrBuilder {
    // Use LookupResponse.newBuilder() to construct.
    private LookupResponse(Builder builder) {
      super(builder);
    }
    private LookupResponse(boolean noInit) {}
    
    private static final LookupResponse defaultInstance;
    public static LookupResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public LookupResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .LookupResponseEntry entry = 1;
    public static final int ENTRY_FIELD_NUMBER = 1;
    private java.util.List<org.kontalk.client.Protocol.LookupResponseEntry> entry_;
    public java.util.List<org.kontalk.client.Protocol.LookupResponseEntry> getEntryList() {
      return entry_;
    }
    public java.util.List<? extends org.kontalk.client.Protocol.LookupResponseEntryOrBuilder> 
        getEntryOrBuilderList() {
      return entry_;
    }
    public int getEntryCount() {
      return entry_.size();
    }
    public org.kontalk.client.Protocol.LookupResponseEntry getEntry(int index) {
      return entry_.get(index);
    }
    public org.kontalk.client.Protocol.LookupResponseEntryOrBuilder getEntryOrBuilder(
        int index) {
      return entry_.get(index);
    }
    
    private void initFields() {
      entry_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getEntryCount(); i++) {
        if (!getEntry(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < entry_.size(); i++) {
        output.writeMessage(1, entry_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < entry_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entry_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.LookupResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.LookupResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.LookupResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.LookupResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.LookupResponse, Builder>
        implements org.kontalk.client.Protocol.LookupResponseOrBuilder {
      // Construct using org.kontalk.client.Protocol.LookupResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.LookupResponse getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.LookupResponse.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.LookupResponse build() {
        org.kontalk.client.Protocol.LookupResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.LookupResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.LookupResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.LookupResponse buildPartial() {
        org.kontalk.client.Protocol.LookupResponse result = new org.kontalk.client.Protocol.LookupResponse(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = java.util.Collections.unmodifiableList(entry_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.entry_ = entry_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.LookupResponse other) {
        if (other == org.kontalk.client.Protocol.LookupResponse.getDefaultInstance()) return this;
        if (!other.entry_.isEmpty()) {
          if (entry_.isEmpty()) {
            entry_ = other.entry_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEntryIsMutable();
            entry_.addAll(other.entry_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getEntryCount(); i++) {
          if (!getEntry(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              org.kontalk.client.Protocol.LookupResponseEntry.Builder subBuilder = org.kontalk.client.Protocol.LookupResponseEntry.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEntry(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .LookupResponseEntry entry = 1;
      private java.util.List<org.kontalk.client.Protocol.LookupResponseEntry> entry_ =
        java.util.Collections.emptyList();
      private void ensureEntryIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = new java.util.ArrayList<org.kontalk.client.Protocol.LookupResponseEntry>(entry_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<org.kontalk.client.Protocol.LookupResponseEntry> getEntryList() {
        return java.util.Collections.unmodifiableList(entry_);
      }
      public int getEntryCount() {
        return entry_.size();
      }
      public org.kontalk.client.Protocol.LookupResponseEntry getEntry(int index) {
        return entry_.get(index);
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.LookupResponseEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.set(index, value);
        
        return this;
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.LookupResponseEntry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addEntry(org.kontalk.client.Protocol.LookupResponseEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(value);
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.LookupResponseEntry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(index, value);
        
        return this;
      }
      public Builder addEntry(
          org.kontalk.client.Protocol.LookupResponseEntry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(builderForValue.build());
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.LookupResponseEntry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllEntry(
          java.lang.Iterable<? extends org.kontalk.client.Protocol.LookupResponseEntry> values) {
        ensureEntryIsMutable();
        super.addAll(values, entry_);
        
        return this;
      }
      public Builder clearEntry() {
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeEntry(int index) {
        ensureEntryIsMutable();
        entry_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:LookupResponse)
    }
    
    static {
      defaultInstance = new LookupResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:LookupResponse)
  }
  
  public interface LookupResponseEntryOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string user_id = 1;
    boolean hasUserId();
    String getUserId();
    
    // optional uint64 timestamp = 2;
    boolean hasTimestamp();
    long getTimestamp();
  }
  public static final class LookupResponseEntry extends
      com.google.protobuf.GeneratedMessageLite
      implements LookupResponseEntryOrBuilder {
    // Use LookupResponseEntry.newBuilder() to construct.
    private LookupResponseEntry(Builder builder) {
      super(builder);
    }
    private LookupResponseEntry(boolean noInit) {}
    
    private static final LookupResponseEntry defaultInstance;
    public static LookupResponseEntry getDefaultInstance() {
      return defaultInstance;
    }
    
    public LookupResponseEntry getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string user_id = 1;
    public static final int USER_ID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          userId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getTimestamp() {
      return timestamp_;
    }
    
    private void initFields() {
      userId_ = "";
      timestamp_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, timestamp_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, timestamp_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.LookupResponseEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponseEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponseEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponseEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponseEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponseEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponseEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.LookupResponseEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.LookupResponseEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.LookupResponseEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.LookupResponseEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.LookupResponseEntry, Builder>
        implements org.kontalk.client.Protocol.LookupResponseEntryOrBuilder {
      // Construct using org.kontalk.client.Protocol.LookupResponseEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.LookupResponseEntry getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.LookupResponseEntry.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.LookupResponseEntry build() {
        org.kontalk.client.Protocol.LookupResponseEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.LookupResponseEntry buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.LookupResponseEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.LookupResponseEntry buildPartial() {
        org.kontalk.client.Protocol.LookupResponseEntry result = new org.kontalk.client.Protocol.LookupResponseEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.LookupResponseEntry other) {
        if (other == org.kontalk.client.Protocol.LookupResponseEntry.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string user_id = 1;
      private java.lang.Object userId_ = "";
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUserId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        
        return this;
      }
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        
        return this;
      }
      void setUserId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        userId_ = value;
        
      }
      
      // optional uint64 timestamp = 2;
      private long timestamp_ ;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getTimestamp() {
        return timestamp_;
      }
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:LookupResponseEntry)
    }
    
    static {
      defaultInstance = new LookupResponseEntry(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:LookupResponseEntry)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
