// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c2s.proto

package org.kontalk.client;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface AuthenticateRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string token = 1;
    boolean hasToken();
    String getToken();
  }
  public static final class AuthenticateRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements AuthenticateRequestOrBuilder {
    // Use AuthenticateRequest.newBuilder() to construct.
    private AuthenticateRequest(Builder builder) {
      super(builder);
    }
    private AuthenticateRequest(boolean noInit) {}
    
    private static final AuthenticateRequest defaultInstance;
    public static AuthenticateRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public AuthenticateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private java.lang.Object token_;
    public boolean hasToken() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          token_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      token_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasToken()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTokenBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTokenBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.AuthenticateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.AuthenticateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.AuthenticateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.AuthenticateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.AuthenticateRequest, Builder>
        implements org.kontalk.client.Protocol.AuthenticateRequestOrBuilder {
      // Construct using org.kontalk.client.Protocol.AuthenticateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        token_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.AuthenticateRequest getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.AuthenticateRequest.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.AuthenticateRequest build() {
        org.kontalk.client.Protocol.AuthenticateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.AuthenticateRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.AuthenticateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.AuthenticateRequest buildPartial() {
        org.kontalk.client.Protocol.AuthenticateRequest result = new org.kontalk.client.Protocol.AuthenticateRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.token_ = token_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.AuthenticateRequest other) {
        if (other == org.kontalk.client.Protocol.AuthenticateRequest.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasToken()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              token_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string token = 1;
      private java.lang.Object token_ = "";
      public boolean hasToken() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setToken(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        token_ = value;
        
        return this;
      }
      public Builder clearToken() {
        bitField0_ = (bitField0_ & ~0x00000001);
        token_ = getDefaultInstance().getToken();
        
        return this;
      }
      void setToken(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        token_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:AuthenticateRequest)
    }
    
    static {
      defaultInstance = new AuthenticateRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AuthenticateRequest)
  }
  
  public interface AuthenticateResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required bool valid = 1;
    boolean hasValid();
    boolean getValid();
  }
  public static final class AuthenticateResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements AuthenticateResponseOrBuilder {
    // Use AuthenticateResponse.newBuilder() to construct.
    private AuthenticateResponse(Builder builder) {
      super(builder);
    }
    private AuthenticateResponse(boolean noInit) {}
    
    private static final AuthenticateResponse defaultInstance;
    public static AuthenticateResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public AuthenticateResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required bool valid = 1;
    public static final int VALID_FIELD_NUMBER = 1;
    private boolean valid_;
    public boolean hasValid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getValid() {
      return valid_;
    }
    
    private void initFields() {
      valid_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasValid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, valid_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, valid_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.AuthenticateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.AuthenticateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.AuthenticateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.AuthenticateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.AuthenticateResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.AuthenticateResponse, Builder>
        implements org.kontalk.client.Protocol.AuthenticateResponseOrBuilder {
      // Construct using org.kontalk.client.Protocol.AuthenticateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        valid_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.AuthenticateResponse getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.AuthenticateResponse.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.AuthenticateResponse build() {
        org.kontalk.client.Protocol.AuthenticateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.AuthenticateResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.AuthenticateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.AuthenticateResponse buildPartial() {
        org.kontalk.client.Protocol.AuthenticateResponse result = new org.kontalk.client.Protocol.AuthenticateResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.valid_ = valid_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.AuthenticateResponse other) {
        if (other == org.kontalk.client.Protocol.AuthenticateResponse.getDefaultInstance()) return this;
        if (other.hasValid()) {
          setValid(other.getValid());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasValid()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              valid_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required bool valid = 1;
      private boolean valid_ ;
      public boolean hasValid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getValid() {
        return valid_;
      }
      public Builder setValid(boolean value) {
        bitField0_ |= 0x00000001;
        valid_ = value;
        
        return this;
      }
      public Builder clearValid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        valid_ = false;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:AuthenticateResponse)
    }
    
    static {
      defaultInstance = new AuthenticateResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AuthenticateResponse)
  }
  
  public interface MessagePostRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated string recipient = 1;
    java.util.List<String> getRecipientList();
    int getRecipientCount();
    String getRecipient(int index);
    
    // optional string mime = 2;
    boolean hasMime();
    String getMime();
    
    // repeated string flags = 3;
    java.util.List<String> getFlagsList();
    int getFlagsCount();
    String getFlags(int index);
    
    // optional bytes content = 4;
    boolean hasContent();
    com.google.protobuf.ByteString getContent();
  }
  public static final class MessagePostRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements MessagePostRequestOrBuilder {
    // Use MessagePostRequest.newBuilder() to construct.
    private MessagePostRequest(Builder builder) {
      super(builder);
    }
    private MessagePostRequest(boolean noInit) {}
    
    private static final MessagePostRequest defaultInstance;
    public static MessagePostRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public MessagePostRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // repeated string recipient = 1;
    public static final int RECIPIENT_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList recipient_;
    public java.util.List<String>
        getRecipientList() {
      return recipient_;
    }
    public int getRecipientCount() {
      return recipient_.size();
    }
    public String getRecipient(int index) {
      return recipient_.get(index);
    }
    
    // optional string mime = 2;
    public static final int MIME_FIELD_NUMBER = 2;
    private java.lang.Object mime_;
    public boolean hasMime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMime() {
      java.lang.Object ref = mime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMimeBytes() {
      java.lang.Object ref = mime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated string flags = 3;
    public static final int FLAGS_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList flags_;
    public java.util.List<String>
        getFlagsList() {
      return flags_;
    }
    public int getFlagsCount() {
      return flags_.size();
    }
    public String getFlags(int index) {
      return flags_.get(index);
    }
    
    // optional bytes content = 4;
    public static final int CONTENT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString content_;
    public boolean hasContent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }
    
    private void initFields() {
      recipient_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      mime_ = "";
      flags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      content_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < recipient_.size(); i++) {
        output.writeBytes(1, recipient_.getByteString(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getMimeBytes());
      }
      for (int i = 0; i < flags_.size(); i++) {
        output.writeBytes(3, flags_.getByteString(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(4, content_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < recipient_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(recipient_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getRecipientList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMimeBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(flags_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getFlagsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, content_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.MessagePostRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessagePostRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessagePostRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.MessagePostRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.MessagePostRequest, Builder>
        implements org.kontalk.client.Protocol.MessagePostRequestOrBuilder {
      // Construct using org.kontalk.client.Protocol.MessagePostRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        recipient_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        mime_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        flags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.MessagePostRequest getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.MessagePostRequest.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.MessagePostRequest build() {
        org.kontalk.client.Protocol.MessagePostRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.MessagePostRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.MessagePostRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.MessagePostRequest buildPartial() {
        org.kontalk.client.Protocol.MessagePostRequest result = new org.kontalk.client.Protocol.MessagePostRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          recipient_ = new com.google.protobuf.UnmodifiableLazyStringList(
              recipient_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.recipient_ = recipient_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mime_ = mime_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          flags_ = new com.google.protobuf.UnmodifiableLazyStringList(
              flags_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.flags_ = flags_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.content_ = content_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.MessagePostRequest other) {
        if (other == org.kontalk.client.Protocol.MessagePostRequest.getDefaultInstance()) return this;
        if (!other.recipient_.isEmpty()) {
          if (recipient_.isEmpty()) {
            recipient_ = other.recipient_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRecipientIsMutable();
            recipient_.addAll(other.recipient_);
          }
          
        }
        if (other.hasMime()) {
          setMime(other.getMime());
        }
        if (!other.flags_.isEmpty()) {
          if (flags_.isEmpty()) {
            flags_ = other.flags_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFlagsIsMutable();
            flags_.addAll(other.flags_);
          }
          
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              ensureRecipientIsMutable();
              recipient_.add(input.readBytes());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              mime_ = input.readBytes();
              break;
            }
            case 26: {
              ensureFlagsIsMutable();
              flags_.add(input.readBytes());
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              content_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated string recipient = 1;
      private com.google.protobuf.LazyStringList recipient_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRecipientIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          recipient_ = new com.google.protobuf.LazyStringArrayList(recipient_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<String>
          getRecipientList() {
        return java.util.Collections.unmodifiableList(recipient_);
      }
      public int getRecipientCount() {
        return recipient_.size();
      }
      public String getRecipient(int index) {
        return recipient_.get(index);
      }
      public Builder setRecipient(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRecipientIsMutable();
        recipient_.set(index, value);
        
        return this;
      }
      public Builder addRecipient(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRecipientIsMutable();
        recipient_.add(value);
        
        return this;
      }
      public Builder addAllRecipient(
          java.lang.Iterable<String> values) {
        ensureRecipientIsMutable();
        super.addAll(values, recipient_);
        
        return this;
      }
      public Builder clearRecipient() {
        recipient_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      void addRecipient(com.google.protobuf.ByteString value) {
        ensureRecipientIsMutable();
        recipient_.add(value);
        
      }
      
      // optional string mime = 2;
      private java.lang.Object mime_ = "";
      public boolean hasMime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMime() {
        java.lang.Object ref = mime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mime_ = value;
        
        return this;
      }
      public Builder clearMime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mime_ = getDefaultInstance().getMime();
        
        return this;
      }
      void setMime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        mime_ = value;
        
      }
      
      // repeated string flags = 3;
      private com.google.protobuf.LazyStringList flags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFlagsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          flags_ = new com.google.protobuf.LazyStringArrayList(flags_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<String>
          getFlagsList() {
        return java.util.Collections.unmodifiableList(flags_);
      }
      public int getFlagsCount() {
        return flags_.size();
      }
      public String getFlags(int index) {
        return flags_.get(index);
      }
      public Builder setFlags(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFlagsIsMutable();
        flags_.set(index, value);
        
        return this;
      }
      public Builder addFlags(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFlagsIsMutable();
        flags_.add(value);
        
        return this;
      }
      public Builder addAllFlags(
          java.lang.Iterable<String> values) {
        ensureFlagsIsMutable();
        super.addAll(values, flags_);
        
        return this;
      }
      public Builder clearFlags() {
        flags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      void addFlags(com.google.protobuf.ByteString value) {
        ensureFlagsIsMutable();
        flags_.add(value);
        
      }
      
      // optional bytes content = 4;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasContent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        content_ = value;
        
        return this;
      }
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        content_ = getDefaultInstance().getContent();
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MessagePostRequest)
    }
    
    static {
      defaultInstance = new MessagePostRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MessagePostRequest)
  }
  
  public interface MessagePostResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .MessagePostResponse.MessageSent entry = 1;
    java.util.List<org.kontalk.client.Protocol.MessagePostResponse.MessageSent> 
        getEntryList();
    org.kontalk.client.Protocol.MessagePostResponse.MessageSent getEntry(int index);
    int getEntryCount();
  }
  public static final class MessagePostResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements MessagePostResponseOrBuilder {
    // Use MessagePostResponse.newBuilder() to construct.
    private MessagePostResponse(Builder builder) {
      super(builder);
    }
    private MessagePostResponse(boolean noInit) {}
    
    private static final MessagePostResponse defaultInstance;
    public static MessagePostResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public MessagePostResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public interface MessageSentOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required .MessagePostResponse.MessageSent.MessageSentStatus status = 1;
      boolean hasStatus();
      org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus getStatus();
      
      // required string user_id = 2;
      boolean hasUserId();
      String getUserId();
      
      // optional string message_id = 3;
      boolean hasMessageId();
      String getMessageId();
    }
    public static final class MessageSent extends
        com.google.protobuf.GeneratedMessageLite
        implements MessageSentOrBuilder {
      // Use MessageSent.newBuilder() to construct.
      private MessageSent(Builder builder) {
        super(builder);
      }
      private MessageSent(boolean noInit) {}
      
      private static final MessageSent defaultInstance;
      public static MessageSent getDefaultInstance() {
        return defaultInstance;
      }
      
      public MessageSent getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public enum MessageSentStatus
          implements com.google.protobuf.Internal.EnumLite {
        STATUS_SUCCESS(0, 0),
        STATUS_ERROR(1, 1),
        STATUS_BUSY(2, 2),
        STATUS_USER_NOTFOUND(3, 3),
        ;
        
        public static final int STATUS_SUCCESS_VALUE = 0;
        public static final int STATUS_ERROR_VALUE = 1;
        public static final int STATUS_BUSY_VALUE = 2;
        public static final int STATUS_USER_NOTFOUND_VALUE = 3;
        
        
        public final int getNumber() { return value; }
        
        public static MessageSentStatus valueOf(int value) {
          switch (value) {
            case 0: return STATUS_SUCCESS;
            case 1: return STATUS_ERROR;
            case 2: return STATUS_BUSY;
            case 3: return STATUS_USER_NOTFOUND;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<MessageSentStatus>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<MessageSentStatus>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<MessageSentStatus>() {
                public MessageSentStatus findValueByNumber(int number) {
                  return MessageSentStatus.valueOf(number);
                }
              };
        
        private final int value;
        
        private MessageSentStatus(int index, int value) {
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:MessagePostResponse.MessageSent.MessageSentStatus)
      }
      
      private int bitField0_;
      // required .MessagePostResponse.MessageSent.MessageSentStatus status = 1;
      public static final int STATUS_FIELD_NUMBER = 1;
      private org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus status_;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus getStatus() {
        return status_;
      }
      
      // required string user_id = 2;
      public static final int USER_ID_FIELD_NUMBER = 2;
      private java.lang.Object userId_;
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getUserId() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            userId_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // optional string message_id = 3;
      public static final int MESSAGE_ID_FIELD_NUMBER = 3;
      private java.lang.Object messageId_;
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getMessageId() {
        java.lang.Object ref = messageId_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            messageId_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getMessageIdBytes() {
        java.lang.Object ref = messageId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          messageId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        status_ = org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus.STATUS_SUCCESS;
        userId_ = "";
        messageId_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasStatus()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasUserId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, status_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getUserIdBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getMessageIdBytes());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, status_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getUserIdBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getMessageIdBytes());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.kontalk.client.Protocol.MessagePostResponse.MessageSent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.kontalk.client.Protocol.MessagePostResponse.MessageSent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.kontalk.client.Protocol.MessagePostResponse.MessageSent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.kontalk.client.Protocol.MessagePostResponse.MessageSent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.kontalk.client.Protocol.MessagePostResponse.MessageSent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.kontalk.client.Protocol.MessagePostResponse.MessageSent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.kontalk.client.Protocol.MessagePostResponse.MessageSent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.kontalk.client.Protocol.MessagePostResponse.MessageSent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.kontalk.client.Protocol.MessagePostResponse.MessageSent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.kontalk.client.Protocol.MessagePostResponse.MessageSent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.kontalk.client.Protocol.MessagePostResponse.MessageSent prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.kontalk.client.Protocol.MessagePostResponse.MessageSent, Builder>
          implements org.kontalk.client.Protocol.MessagePostResponse.MessageSentOrBuilder {
        // Construct using org.kontalk.client.Protocol.MessagePostResponse.MessageSent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          status_ = org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus.STATUS_SUCCESS;
          bitField0_ = (bitField0_ & ~0x00000001);
          userId_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          messageId_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public org.kontalk.client.Protocol.MessagePostResponse.MessageSent getDefaultInstanceForType() {
          return org.kontalk.client.Protocol.MessagePostResponse.MessageSent.getDefaultInstance();
        }
        
        public org.kontalk.client.Protocol.MessagePostResponse.MessageSent build() {
          org.kontalk.client.Protocol.MessagePostResponse.MessageSent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.kontalk.client.Protocol.MessagePostResponse.MessageSent buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.kontalk.client.Protocol.MessagePostResponse.MessageSent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.kontalk.client.Protocol.MessagePostResponse.MessageSent buildPartial() {
          org.kontalk.client.Protocol.MessagePostResponse.MessageSent result = new org.kontalk.client.Protocol.MessagePostResponse.MessageSent(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.status_ = status_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.userId_ = userId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.messageId_ = messageId_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(org.kontalk.client.Protocol.MessagePostResponse.MessageSent other) {
          if (other == org.kontalk.client.Protocol.MessagePostResponse.MessageSent.getDefaultInstance()) return this;
          if (other.hasStatus()) {
            setStatus(other.getStatus());
          }
          if (other.hasUserId()) {
            setUserId(other.getUserId());
          }
          if (other.hasMessageId()) {
            setMessageId(other.getMessageId());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasStatus()) {
            
            return false;
          }
          if (!hasUserId()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus value = org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus.valueOf(rawValue);
                if (value != null) {
                  bitField0_ |= 0x00000001;
                  status_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                userId_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                messageId_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required .MessagePostResponse.MessageSent.MessageSentStatus status = 1;
        private org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus status_ = org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus.STATUS_SUCCESS;
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus getStatus() {
          return status_;
        }
        public Builder setStatus(org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          status_ = value;
          
          return this;
        }
        public Builder clearStatus() {
          bitField0_ = (bitField0_ & ~0x00000001);
          status_ = org.kontalk.client.Protocol.MessagePostResponse.MessageSent.MessageSentStatus.STATUS_SUCCESS;
          
          return this;
        }
        
        // required string user_id = 2;
        private java.lang.Object userId_ = "";
        public boolean hasUserId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public String getUserId() {
          java.lang.Object ref = userId_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            userId_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setUserId(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          userId_ = value;
          
          return this;
        }
        public Builder clearUserId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          userId_ = getDefaultInstance().getUserId();
          
          return this;
        }
        void setUserId(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000002;
          userId_ = value;
          
        }
        
        // optional string message_id = 3;
        private java.lang.Object messageId_ = "";
        public boolean hasMessageId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public String getMessageId() {
          java.lang.Object ref = messageId_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            messageId_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setMessageId(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          messageId_ = value;
          
          return this;
        }
        public Builder clearMessageId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          messageId_ = getDefaultInstance().getMessageId();
          
          return this;
        }
        void setMessageId(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000004;
          messageId_ = value;
          
        }
        
        // @@protoc_insertion_point(builder_scope:MessagePostResponse.MessageSent)
      }
      
      static {
        defaultInstance = new MessageSent(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MessagePostResponse.MessageSent)
    }
    
    // repeated .MessagePostResponse.MessageSent entry = 1;
    public static final int ENTRY_FIELD_NUMBER = 1;
    private java.util.List<org.kontalk.client.Protocol.MessagePostResponse.MessageSent> entry_;
    public java.util.List<org.kontalk.client.Protocol.MessagePostResponse.MessageSent> getEntryList() {
      return entry_;
    }
    public java.util.List<? extends org.kontalk.client.Protocol.MessagePostResponse.MessageSentOrBuilder> 
        getEntryOrBuilderList() {
      return entry_;
    }
    public int getEntryCount() {
      return entry_.size();
    }
    public org.kontalk.client.Protocol.MessagePostResponse.MessageSent getEntry(int index) {
      return entry_.get(index);
    }
    public org.kontalk.client.Protocol.MessagePostResponse.MessageSentOrBuilder getEntryOrBuilder(
        int index) {
      return entry_.get(index);
    }
    
    private void initFields() {
      entry_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getEntryCount(); i++) {
        if (!getEntry(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < entry_.size(); i++) {
        output.writeMessage(1, entry_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < entry_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entry_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.MessagePostResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessagePostResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessagePostResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessagePostResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.MessagePostResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.MessagePostResponse, Builder>
        implements org.kontalk.client.Protocol.MessagePostResponseOrBuilder {
      // Construct using org.kontalk.client.Protocol.MessagePostResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.MessagePostResponse getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.MessagePostResponse.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.MessagePostResponse build() {
        org.kontalk.client.Protocol.MessagePostResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.MessagePostResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.MessagePostResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.MessagePostResponse buildPartial() {
        org.kontalk.client.Protocol.MessagePostResponse result = new org.kontalk.client.Protocol.MessagePostResponse(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = java.util.Collections.unmodifiableList(entry_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.entry_ = entry_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.MessagePostResponse other) {
        if (other == org.kontalk.client.Protocol.MessagePostResponse.getDefaultInstance()) return this;
        if (!other.entry_.isEmpty()) {
          if (entry_.isEmpty()) {
            entry_ = other.entry_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEntryIsMutable();
            entry_.addAll(other.entry_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getEntryCount(); i++) {
          if (!getEntry(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              org.kontalk.client.Protocol.MessagePostResponse.MessageSent.Builder subBuilder = org.kontalk.client.Protocol.MessagePostResponse.MessageSent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEntry(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .MessagePostResponse.MessageSent entry = 1;
      private java.util.List<org.kontalk.client.Protocol.MessagePostResponse.MessageSent> entry_ =
        java.util.Collections.emptyList();
      private void ensureEntryIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = new java.util.ArrayList<org.kontalk.client.Protocol.MessagePostResponse.MessageSent>(entry_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<org.kontalk.client.Protocol.MessagePostResponse.MessageSent> getEntryList() {
        return java.util.Collections.unmodifiableList(entry_);
      }
      public int getEntryCount() {
        return entry_.size();
      }
      public org.kontalk.client.Protocol.MessagePostResponse.MessageSent getEntry(int index) {
        return entry_.get(index);
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.MessagePostResponse.MessageSent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.set(index, value);
        
        return this;
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.MessagePostResponse.MessageSent.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addEntry(org.kontalk.client.Protocol.MessagePostResponse.MessageSent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(value);
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.MessagePostResponse.MessageSent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(index, value);
        
        return this;
      }
      public Builder addEntry(
          org.kontalk.client.Protocol.MessagePostResponse.MessageSent.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(builderForValue.build());
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.MessagePostResponse.MessageSent.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllEntry(
          java.lang.Iterable<? extends org.kontalk.client.Protocol.MessagePostResponse.MessageSent> values) {
        ensureEntryIsMutable();
        super.addAll(values, entry_);
        
        return this;
      }
      public Builder clearEntry() {
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeEntry(int index) {
        ensureEntryIsMutable();
        entry_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MessagePostResponse)
    }
    
    static {
      defaultInstance = new MessagePostResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MessagePostResponse)
  }
  
  public interface NewMessageOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string message_id = 1;
    boolean hasMessageId();
    String getMessageId();
    
    // required string timestamp = 2;
    boolean hasTimestamp();
    String getTimestamp();
    
    // required string sender = 3;
    boolean hasSender();
    String getSender();
    
    // repeated string group = 4;
    java.util.List<String> getGroupList();
    int getGroupCount();
    String getGroup(int index);
    
    // optional string original_id = 5;
    boolean hasOriginalId();
    String getOriginalId();
    
    // required string mime = 6;
    boolean hasMime();
    String getMime();
    
    // repeated string flags = 7;
    java.util.List<String> getFlagsList();
    int getFlagsCount();
    String getFlags(int index);
    
    // required bytes content = 8;
    boolean hasContent();
    com.google.protobuf.ByteString getContent();
    
    // optional string url = 9;
    boolean hasUrl();
    String getUrl();
  }
  public static final class NewMessage extends
      com.google.protobuf.GeneratedMessageLite
      implements NewMessageOrBuilder {
    // Use NewMessage.newBuilder() to construct.
    private NewMessage(Builder builder) {
      super(builder);
    }
    private NewMessage(boolean noInit) {}
    
    private static final NewMessage defaultInstance;
    public static NewMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public NewMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string message_id = 1;
    public static final int MESSAGE_ID_FIELD_NUMBER = 1;
    private java.lang.Object messageId_;
    public boolean hasMessageId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMessageId() {
      java.lang.Object ref = messageId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          messageId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageIdBytes() {
      java.lang.Object ref = messageId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        messageId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private java.lang.Object timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getTimestamp() {
      java.lang.Object ref = timestamp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          timestamp_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTimestampBytes() {
      java.lang.Object ref = timestamp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        timestamp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string sender = 3;
    public static final int SENDER_FIELD_NUMBER = 3;
    private java.lang.Object sender_;
    public boolean hasSender() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getSender() {
      java.lang.Object ref = sender_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          sender_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSenderBytes() {
      java.lang.Object ref = sender_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        sender_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated string group = 4;
    public static final int GROUP_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList group_;
    public java.util.List<String>
        getGroupList() {
      return group_;
    }
    public int getGroupCount() {
      return group_.size();
    }
    public String getGroup(int index) {
      return group_.get(index);
    }
    
    // optional string original_id = 5;
    public static final int ORIGINAL_ID_FIELD_NUMBER = 5;
    private java.lang.Object originalId_;
    public boolean hasOriginalId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getOriginalId() {
      java.lang.Object ref = originalId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          originalId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOriginalIdBytes() {
      java.lang.Object ref = originalId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        originalId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string mime = 6;
    public static final int MIME_FIELD_NUMBER = 6;
    private java.lang.Object mime_;
    public boolean hasMime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getMime() {
      java.lang.Object ref = mime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMimeBytes() {
      java.lang.Object ref = mime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated string flags = 7;
    public static final int FLAGS_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList flags_;
    public java.util.List<String>
        getFlagsList() {
      return flags_;
    }
    public int getFlagsCount() {
      return flags_.size();
    }
    public String getFlags(int index) {
      return flags_.get(index);
    }
    
    // required bytes content = 8;
    public static final int CONTENT_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString content_;
    public boolean hasContent() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }
    
    // optional string url = 9;
    public static final int URL_FIELD_NUMBER = 9;
    private java.lang.Object url_;
    public boolean hasUrl() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getUrl() {
      java.lang.Object ref = url_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          url_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUrlBytes() {
      java.lang.Object ref = url_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        url_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      messageId_ = "";
      timestamp_ = "";
      sender_ = "";
      group_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      originalId_ = "";
      mime_ = "";
      flags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      content_ = com.google.protobuf.ByteString.EMPTY;
      url_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMessageId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSender()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasContent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTimestampBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSenderBytes());
      }
      for (int i = 0; i < group_.size(); i++) {
        output.writeBytes(4, group_.getByteString(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getOriginalIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getMimeBytes());
      }
      for (int i = 0; i < flags_.size(); i++) {
        output.writeBytes(7, flags_.getByteString(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(8, content_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(9, getUrlBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTimestampBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSenderBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < group_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(group_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getGroupList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getOriginalIdBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getMimeBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(flags_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getFlagsList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, content_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getUrlBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.NewMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.NewMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.NewMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.NewMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.NewMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.NewMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.NewMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.NewMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.NewMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.NewMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.NewMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.NewMessage, Builder>
        implements org.kontalk.client.Protocol.NewMessageOrBuilder {
      // Construct using org.kontalk.client.Protocol.NewMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        messageId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        sender_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        group_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        originalId_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        mime_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        flags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        url_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.NewMessage getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.NewMessage.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.NewMessage build() {
        org.kontalk.client.Protocol.NewMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.NewMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.NewMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.NewMessage buildPartial() {
        org.kontalk.client.Protocol.NewMessage result = new org.kontalk.client.Protocol.NewMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageId_ = messageId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sender_ = sender_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          group_ = new com.google.protobuf.UnmodifiableLazyStringList(
              group_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.group_ = group_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.originalId_ = originalId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mime_ = mime_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          flags_ = new com.google.protobuf.UnmodifiableLazyStringList(
              flags_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.flags_ = flags_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.content_ = content_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.url_ = url_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.NewMessage other) {
        if (other == org.kontalk.client.Protocol.NewMessage.getDefaultInstance()) return this;
        if (other.hasMessageId()) {
          setMessageId(other.getMessageId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasSender()) {
          setSender(other.getSender());
        }
        if (!other.group_.isEmpty()) {
          if (group_.isEmpty()) {
            group_ = other.group_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureGroupIsMutable();
            group_.addAll(other.group_);
          }
          
        }
        if (other.hasOriginalId()) {
          setOriginalId(other.getOriginalId());
        }
        if (other.hasMime()) {
          setMime(other.getMime());
        }
        if (!other.flags_.isEmpty()) {
          if (flags_.isEmpty()) {
            flags_ = other.flags_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureFlagsIsMutable();
            flags_.addAll(other.flags_);
          }
          
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasUrl()) {
          setUrl(other.getUrl());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMessageId()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasSender()) {
          
          return false;
        }
        if (!hasMime()) {
          
          return false;
        }
        if (!hasContent()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              messageId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              sender_ = input.readBytes();
              break;
            }
            case 34: {
              ensureGroupIsMutable();
              group_.add(input.readBytes());
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              originalId_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              mime_ = input.readBytes();
              break;
            }
            case 58: {
              ensureFlagsIsMutable();
              flags_.add(input.readBytes());
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              content_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              url_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string message_id = 1;
      private java.lang.Object messageId_ = "";
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMessageId() {
        java.lang.Object ref = messageId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          messageId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessageId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageId_ = value;
        
        return this;
      }
      public Builder clearMessageId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageId_ = getDefaultInstance().getMessageId();
        
        return this;
      }
      void setMessageId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        messageId_ = value;
        
      }
      
      // required string timestamp = 2;
      private java.lang.Object timestamp_ = "";
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getTimestamp() {
        java.lang.Object ref = timestamp_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          timestamp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTimestamp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        timestamp_ = value;
        
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = getDefaultInstance().getTimestamp();
        
        return this;
      }
      void setTimestamp(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        
      }
      
      // required string sender = 3;
      private java.lang.Object sender_ = "";
      public boolean hasSender() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getSender() {
        java.lang.Object ref = sender_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          sender_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSender(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sender_ = value;
        
        return this;
      }
      public Builder clearSender() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sender_ = getDefaultInstance().getSender();
        
        return this;
      }
      void setSender(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        sender_ = value;
        
      }
      
      // repeated string group = 4;
      private com.google.protobuf.LazyStringList group_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureGroupIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          group_ = new com.google.protobuf.LazyStringArrayList(group_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<String>
          getGroupList() {
        return java.util.Collections.unmodifiableList(group_);
      }
      public int getGroupCount() {
        return group_.size();
      }
      public String getGroup(int index) {
        return group_.get(index);
      }
      public Builder setGroup(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGroupIsMutable();
        group_.set(index, value);
        
        return this;
      }
      public Builder addGroup(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGroupIsMutable();
        group_.add(value);
        
        return this;
      }
      public Builder addAllGroup(
          java.lang.Iterable<String> values) {
        ensureGroupIsMutable();
        super.addAll(values, group_);
        
        return this;
      }
      public Builder clearGroup() {
        group_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      void addGroup(com.google.protobuf.ByteString value) {
        ensureGroupIsMutable();
        group_.add(value);
        
      }
      
      // optional string original_id = 5;
      private java.lang.Object originalId_ = "";
      public boolean hasOriginalId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getOriginalId() {
        java.lang.Object ref = originalId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          originalId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOriginalId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        originalId_ = value;
        
        return this;
      }
      public Builder clearOriginalId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        originalId_ = getDefaultInstance().getOriginalId();
        
        return this;
      }
      void setOriginalId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        originalId_ = value;
        
      }
      
      // required string mime = 6;
      private java.lang.Object mime_ = "";
      public boolean hasMime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getMime() {
        java.lang.Object ref = mime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        mime_ = value;
        
        return this;
      }
      public Builder clearMime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mime_ = getDefaultInstance().getMime();
        
        return this;
      }
      void setMime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        mime_ = value;
        
      }
      
      // repeated string flags = 7;
      private com.google.protobuf.LazyStringList flags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFlagsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          flags_ = new com.google.protobuf.LazyStringArrayList(flags_);
          bitField0_ |= 0x00000040;
         }
      }
      public java.util.List<String>
          getFlagsList() {
        return java.util.Collections.unmodifiableList(flags_);
      }
      public int getFlagsCount() {
        return flags_.size();
      }
      public String getFlags(int index) {
        return flags_.get(index);
      }
      public Builder setFlags(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFlagsIsMutable();
        flags_.set(index, value);
        
        return this;
      }
      public Builder addFlags(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFlagsIsMutable();
        flags_.add(value);
        
        return this;
      }
      public Builder addAllFlags(
          java.lang.Iterable<String> values) {
        ensureFlagsIsMutable();
        super.addAll(values, flags_);
        
        return this;
      }
      public Builder clearFlags() {
        flags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        
        return this;
      }
      void addFlags(com.google.protobuf.ByteString value) {
        ensureFlagsIsMutable();
        flags_.add(value);
        
      }
      
      // required bytes content = 8;
      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasContent() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        content_ = value;
        
        return this;
      }
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000080);
        content_ = getDefaultInstance().getContent();
        
        return this;
      }
      
      // optional string url = 9;
      private java.lang.Object url_ = "";
      public boolean hasUrl() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getUrl() {
        java.lang.Object ref = url_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          url_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUrl(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        url_ = value;
        
        return this;
      }
      public Builder clearUrl() {
        bitField0_ = (bitField0_ & ~0x00000100);
        url_ = getDefaultInstance().getUrl();
        
        return this;
      }
      void setUrl(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        url_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:NewMessage)
    }
    
    static {
      defaultInstance = new NewMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:NewMessage)
  }
  
  public interface MessageAckRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated string message_id = 1;
    java.util.List<String> getMessageIdList();
    int getMessageIdCount();
    String getMessageId(int index);
  }
  public static final class MessageAckRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements MessageAckRequestOrBuilder {
    // Use MessageAckRequest.newBuilder() to construct.
    private MessageAckRequest(Builder builder) {
      super(builder);
    }
    private MessageAckRequest(boolean noInit) {}
    
    private static final MessageAckRequest defaultInstance;
    public static MessageAckRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public MessageAckRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated string message_id = 1;
    public static final int MESSAGE_ID_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList messageId_;
    public java.util.List<String>
        getMessageIdList() {
      return messageId_;
    }
    public int getMessageIdCount() {
      return messageId_.size();
    }
    public String getMessageId(int index) {
      return messageId_.get(index);
    }
    
    private void initFields() {
      messageId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < messageId_.size(); i++) {
        output.writeBytes(1, messageId_.getByteString(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < messageId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(messageId_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getMessageIdList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.MessageAckRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessageAckRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessageAckRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.MessageAckRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.MessageAckRequest, Builder>
        implements org.kontalk.client.Protocol.MessageAckRequestOrBuilder {
      // Construct using org.kontalk.client.Protocol.MessageAckRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        messageId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.MessageAckRequest getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.MessageAckRequest.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.MessageAckRequest build() {
        org.kontalk.client.Protocol.MessageAckRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.MessageAckRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.MessageAckRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.MessageAckRequest buildPartial() {
        org.kontalk.client.Protocol.MessageAckRequest result = new org.kontalk.client.Protocol.MessageAckRequest(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          messageId_ = new com.google.protobuf.UnmodifiableLazyStringList(
              messageId_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.messageId_ = messageId_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.MessageAckRequest other) {
        if (other == org.kontalk.client.Protocol.MessageAckRequest.getDefaultInstance()) return this;
        if (!other.messageId_.isEmpty()) {
          if (messageId_.isEmpty()) {
            messageId_ = other.messageId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMessageIdIsMutable();
            messageId_.addAll(other.messageId_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              ensureMessageIdIsMutable();
              messageId_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated string message_id = 1;
      private com.google.protobuf.LazyStringList messageId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMessageIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          messageId_ = new com.google.protobuf.LazyStringArrayList(messageId_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<String>
          getMessageIdList() {
        return java.util.Collections.unmodifiableList(messageId_);
      }
      public int getMessageIdCount() {
        return messageId_.size();
      }
      public String getMessageId(int index) {
        return messageId_.get(index);
      }
      public Builder setMessageId(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMessageIdIsMutable();
        messageId_.set(index, value);
        
        return this;
      }
      public Builder addMessageId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMessageIdIsMutable();
        messageId_.add(value);
        
        return this;
      }
      public Builder addAllMessageId(
          java.lang.Iterable<String> values) {
        ensureMessageIdIsMutable();
        super.addAll(values, messageId_);
        
        return this;
      }
      public Builder clearMessageId() {
        messageId_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      void addMessageId(com.google.protobuf.ByteString value) {
        ensureMessageIdIsMutable();
        messageId_.add(value);
        
      }
      
      // @@protoc_insertion_point(builder_scope:MessageAckRequest)
    }
    
    static {
      defaultInstance = new MessageAckRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MessageAckRequest)
  }
  
  public interface MessageAckResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .MessageAckResponse.Entry entry = 1;
    java.util.List<org.kontalk.client.Protocol.MessageAckResponse.Entry> 
        getEntryList();
    org.kontalk.client.Protocol.MessageAckResponse.Entry getEntry(int index);
    int getEntryCount();
  }
  public static final class MessageAckResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements MessageAckResponseOrBuilder {
    // Use MessageAckResponse.newBuilder() to construct.
    private MessageAckResponse(Builder builder) {
      super(builder);
    }
    private MessageAckResponse(boolean noInit) {}
    
    private static final MessageAckResponse defaultInstance;
    public static MessageAckResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public MessageAckResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public interface EntryOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required string message_id = 1;
      boolean hasMessageId();
      String getMessageId();
      
      // required .MessageAckResponse.Entry.MessageAckStatus status = 2;
      boolean hasStatus();
      org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus getStatus();
    }
    public static final class Entry extends
        com.google.protobuf.GeneratedMessageLite
        implements EntryOrBuilder {
      // Use Entry.newBuilder() to construct.
      private Entry(Builder builder) {
        super(builder);
      }
      private Entry(boolean noInit) {}
      
      private static final Entry defaultInstance;
      public static Entry getDefaultInstance() {
        return defaultInstance;
      }
      
      public Entry getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public enum MessageAckStatus
          implements com.google.protobuf.Internal.EnumLite {
        STATUS_SUCCESS(0, 0),
        STATUS_ERROR(1, 1),
        STATUS_NOTFOUND(2, 2),
        ;
        
        public static final int STATUS_SUCCESS_VALUE = 0;
        public static final int STATUS_ERROR_VALUE = 1;
        public static final int STATUS_NOTFOUND_VALUE = 2;
        
        
        public final int getNumber() { return value; }
        
        public static MessageAckStatus valueOf(int value) {
          switch (value) {
            case 0: return STATUS_SUCCESS;
            case 1: return STATUS_ERROR;
            case 2: return STATUS_NOTFOUND;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<MessageAckStatus>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<MessageAckStatus>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<MessageAckStatus>() {
                public MessageAckStatus findValueByNumber(int number) {
                  return MessageAckStatus.valueOf(number);
                }
              };
        
        private final int value;
        
        private MessageAckStatus(int index, int value) {
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:MessageAckResponse.Entry.MessageAckStatus)
      }
      
      private int bitField0_;
      // required string message_id = 1;
      public static final int MESSAGE_ID_FIELD_NUMBER = 1;
      private java.lang.Object messageId_;
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMessageId() {
        java.lang.Object ref = messageId_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            messageId_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getMessageIdBytes() {
        java.lang.Object ref = messageId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          messageId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required .MessageAckResponse.Entry.MessageAckStatus status = 2;
      public static final int STATUS_FIELD_NUMBER = 2;
      private org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus status_;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus getStatus() {
        return status_;
      }
      
      private void initFields() {
        messageId_ = "";
        status_ = org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus.STATUS_SUCCESS;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasMessageId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasStatus()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getMessageIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, status_.getNumber());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getMessageIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, status_.getNumber());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.kontalk.client.Protocol.MessageAckResponse.Entry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.kontalk.client.Protocol.MessageAckResponse.Entry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.kontalk.client.Protocol.MessageAckResponse.Entry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.kontalk.client.Protocol.MessageAckResponse.Entry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.kontalk.client.Protocol.MessageAckResponse.Entry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.kontalk.client.Protocol.MessageAckResponse.Entry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.kontalk.client.Protocol.MessageAckResponse.Entry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.kontalk.client.Protocol.MessageAckResponse.Entry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.kontalk.client.Protocol.MessageAckResponse.Entry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.kontalk.client.Protocol.MessageAckResponse.Entry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.kontalk.client.Protocol.MessageAckResponse.Entry prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.kontalk.client.Protocol.MessageAckResponse.Entry, Builder>
          implements org.kontalk.client.Protocol.MessageAckResponse.EntryOrBuilder {
        // Construct using org.kontalk.client.Protocol.MessageAckResponse.Entry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          messageId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          status_ = org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus.STATUS_SUCCESS;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public org.kontalk.client.Protocol.MessageAckResponse.Entry getDefaultInstanceForType() {
          return org.kontalk.client.Protocol.MessageAckResponse.Entry.getDefaultInstance();
        }
        
        public org.kontalk.client.Protocol.MessageAckResponse.Entry build() {
          org.kontalk.client.Protocol.MessageAckResponse.Entry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.kontalk.client.Protocol.MessageAckResponse.Entry buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.kontalk.client.Protocol.MessageAckResponse.Entry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.kontalk.client.Protocol.MessageAckResponse.Entry buildPartial() {
          org.kontalk.client.Protocol.MessageAckResponse.Entry result = new org.kontalk.client.Protocol.MessageAckResponse.Entry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.messageId_ = messageId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.status_ = status_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(org.kontalk.client.Protocol.MessageAckResponse.Entry other) {
          if (other == org.kontalk.client.Protocol.MessageAckResponse.Entry.getDefaultInstance()) return this;
          if (other.hasMessageId()) {
            setMessageId(other.getMessageId());
          }
          if (other.hasStatus()) {
            setStatus(other.getStatus());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasMessageId()) {
            
            return false;
          }
          if (!hasStatus()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                messageId_ = input.readBytes();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus value = org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus.valueOf(rawValue);
                if (value != null) {
                  bitField0_ |= 0x00000002;
                  status_ = value;
                }
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string message_id = 1;
        private java.lang.Object messageId_ = "";
        public boolean hasMessageId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getMessageId() {
          java.lang.Object ref = messageId_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            messageId_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setMessageId(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          messageId_ = value;
          
          return this;
        }
        public Builder clearMessageId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          messageId_ = getDefaultInstance().getMessageId();
          
          return this;
        }
        void setMessageId(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          messageId_ = value;
          
        }
        
        // required .MessageAckResponse.Entry.MessageAckStatus status = 2;
        private org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus status_ = org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus.STATUS_SUCCESS;
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus getStatus() {
          return status_;
        }
        public Builder setStatus(org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          status_ = value;
          
          return this;
        }
        public Builder clearStatus() {
          bitField0_ = (bitField0_ & ~0x00000002);
          status_ = org.kontalk.client.Protocol.MessageAckResponse.Entry.MessageAckStatus.STATUS_SUCCESS;
          
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:MessageAckResponse.Entry)
      }
      
      static {
        defaultInstance = new Entry(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:MessageAckResponse.Entry)
    }
    
    // repeated .MessageAckResponse.Entry entry = 1;
    public static final int ENTRY_FIELD_NUMBER = 1;
    private java.util.List<org.kontalk.client.Protocol.MessageAckResponse.Entry> entry_;
    public java.util.List<org.kontalk.client.Protocol.MessageAckResponse.Entry> getEntryList() {
      return entry_;
    }
    public java.util.List<? extends org.kontalk.client.Protocol.MessageAckResponse.EntryOrBuilder> 
        getEntryOrBuilderList() {
      return entry_;
    }
    public int getEntryCount() {
      return entry_.size();
    }
    public org.kontalk.client.Protocol.MessageAckResponse.Entry getEntry(int index) {
      return entry_.get(index);
    }
    public org.kontalk.client.Protocol.MessageAckResponse.EntryOrBuilder getEntryOrBuilder(
        int index) {
      return entry_.get(index);
    }
    
    private void initFields() {
      entry_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getEntryCount(); i++) {
        if (!getEntry(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < entry_.size(); i++) {
        output.writeMessage(1, entry_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < entry_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entry_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.MessageAckResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessageAckResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.MessageAckResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.MessageAckResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.MessageAckResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.MessageAckResponse, Builder>
        implements org.kontalk.client.Protocol.MessageAckResponseOrBuilder {
      // Construct using org.kontalk.client.Protocol.MessageAckResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.MessageAckResponse getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.MessageAckResponse.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.MessageAckResponse build() {
        org.kontalk.client.Protocol.MessageAckResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.MessageAckResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.MessageAckResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.MessageAckResponse buildPartial() {
        org.kontalk.client.Protocol.MessageAckResponse result = new org.kontalk.client.Protocol.MessageAckResponse(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = java.util.Collections.unmodifiableList(entry_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.entry_ = entry_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.MessageAckResponse other) {
        if (other == org.kontalk.client.Protocol.MessageAckResponse.getDefaultInstance()) return this;
        if (!other.entry_.isEmpty()) {
          if (entry_.isEmpty()) {
            entry_ = other.entry_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEntryIsMutable();
            entry_.addAll(other.entry_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getEntryCount(); i++) {
          if (!getEntry(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              org.kontalk.client.Protocol.MessageAckResponse.Entry.Builder subBuilder = org.kontalk.client.Protocol.MessageAckResponse.Entry.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEntry(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .MessageAckResponse.Entry entry = 1;
      private java.util.List<org.kontalk.client.Protocol.MessageAckResponse.Entry> entry_ =
        java.util.Collections.emptyList();
      private void ensureEntryIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = new java.util.ArrayList<org.kontalk.client.Protocol.MessageAckResponse.Entry>(entry_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<org.kontalk.client.Protocol.MessageAckResponse.Entry> getEntryList() {
        return java.util.Collections.unmodifiableList(entry_);
      }
      public int getEntryCount() {
        return entry_.size();
      }
      public org.kontalk.client.Protocol.MessageAckResponse.Entry getEntry(int index) {
        return entry_.get(index);
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.MessageAckResponse.Entry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.set(index, value);
        
        return this;
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.MessageAckResponse.Entry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addEntry(org.kontalk.client.Protocol.MessageAckResponse.Entry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(value);
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.MessageAckResponse.Entry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(index, value);
        
        return this;
      }
      public Builder addEntry(
          org.kontalk.client.Protocol.MessageAckResponse.Entry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(builderForValue.build());
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.MessageAckResponse.Entry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllEntry(
          java.lang.Iterable<? extends org.kontalk.client.Protocol.MessageAckResponse.Entry> values) {
        ensureEntryIsMutable();
        super.addAll(values, entry_);
        
        return this;
      }
      public Builder clearEntry() {
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeEntry(int index) {
        ensureEntryIsMutable();
        entry_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MessageAckResponse)
    }
    
    static {
      defaultInstance = new MessageAckResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MessageAckResponse)
  }
  
  public interface ReceiptMessageOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // repeated .ReceiptMessage.Entry entry = 1;
    java.util.List<org.kontalk.client.Protocol.ReceiptMessage.Entry> 
        getEntryList();
    org.kontalk.client.Protocol.ReceiptMessage.Entry getEntry(int index);
    int getEntryCount();
  }
  public static final class ReceiptMessage extends
      com.google.protobuf.GeneratedMessageLite
      implements ReceiptMessageOrBuilder {
    // Use ReceiptMessage.newBuilder() to construct.
    private ReceiptMessage(Builder builder) {
      super(builder);
    }
    private ReceiptMessage(boolean noInit) {}
    
    private static final ReceiptMessage defaultInstance;
    public static ReceiptMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public ReceiptMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public interface EntryOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required string message_id = 1;
      boolean hasMessageId();
      String getMessageId();
      
      // required .ReceiptMessage.Entry.ReceiptStatus status = 2;
      boolean hasStatus();
      org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus getStatus();
      
      // optional string timestamp = 3;
      boolean hasTimestamp();
      String getTimestamp();
    }
    public static final class Entry extends
        com.google.protobuf.GeneratedMessageLite
        implements EntryOrBuilder {
      // Use Entry.newBuilder() to construct.
      private Entry(Builder builder) {
        super(builder);
      }
      private Entry(boolean noInit) {}
      
      private static final Entry defaultInstance;
      public static Entry getDefaultInstance() {
        return defaultInstance;
      }
      
      public Entry getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public enum ReceiptStatus
          implements com.google.protobuf.Internal.EnumLite {
        STATUS_SUCCESS(0, 0),
        STATUS_ERROR(1, 1),
        STATUS_USER_NOTFOUND(2, 2),
        STATUS_TTL_EXPIRED(3, 3),
        ;
        
        public static final int STATUS_SUCCESS_VALUE = 0;
        public static final int STATUS_ERROR_VALUE = 1;
        public static final int STATUS_USER_NOTFOUND_VALUE = 2;
        public static final int STATUS_TTL_EXPIRED_VALUE = 3;
        
        
        public final int getNumber() { return value; }
        
        public static ReceiptStatus valueOf(int value) {
          switch (value) {
            case 0: return STATUS_SUCCESS;
            case 1: return STATUS_ERROR;
            case 2: return STATUS_USER_NOTFOUND;
            case 3: return STATUS_TTL_EXPIRED;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<ReceiptStatus>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<ReceiptStatus>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ReceiptStatus>() {
                public ReceiptStatus findValueByNumber(int number) {
                  return ReceiptStatus.valueOf(number);
                }
              };
        
        private final int value;
        
        private ReceiptStatus(int index, int value) {
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:ReceiptMessage.Entry.ReceiptStatus)
      }
      
      private int bitField0_;
      // required string message_id = 1;
      public static final int MESSAGE_ID_FIELD_NUMBER = 1;
      private java.lang.Object messageId_;
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMessageId() {
        java.lang.Object ref = messageId_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            messageId_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getMessageIdBytes() {
        java.lang.Object ref = messageId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          messageId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required .ReceiptMessage.Entry.ReceiptStatus status = 2;
      public static final int STATUS_FIELD_NUMBER = 2;
      private org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus status_;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus getStatus() {
        return status_;
      }
      
      // optional string timestamp = 3;
      public static final int TIMESTAMP_FIELD_NUMBER = 3;
      private java.lang.Object timestamp_;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getTimestamp() {
        java.lang.Object ref = timestamp_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            timestamp_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getTimestampBytes() {
        java.lang.Object ref = timestamp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          timestamp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        messageId_ = "";
        status_ = org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus.STATUS_SUCCESS;
        timestamp_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasMessageId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasStatus()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getMessageIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, status_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getTimestampBytes());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getMessageIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, status_.getNumber());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getTimestampBytes());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.kontalk.client.Protocol.ReceiptMessage.Entry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.kontalk.client.Protocol.ReceiptMessage.Entry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.kontalk.client.Protocol.ReceiptMessage.Entry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.kontalk.client.Protocol.ReceiptMessage.Entry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.kontalk.client.Protocol.ReceiptMessage.Entry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.kontalk.client.Protocol.ReceiptMessage.Entry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.kontalk.client.Protocol.ReceiptMessage.Entry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.kontalk.client.Protocol.ReceiptMessage.Entry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.kontalk.client.Protocol.ReceiptMessage.Entry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.kontalk.client.Protocol.ReceiptMessage.Entry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.kontalk.client.Protocol.ReceiptMessage.Entry prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.kontalk.client.Protocol.ReceiptMessage.Entry, Builder>
          implements org.kontalk.client.Protocol.ReceiptMessage.EntryOrBuilder {
        // Construct using org.kontalk.client.Protocol.ReceiptMessage.Entry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          messageId_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          status_ = org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus.STATUS_SUCCESS;
          bitField0_ = (bitField0_ & ~0x00000002);
          timestamp_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public org.kontalk.client.Protocol.ReceiptMessage.Entry getDefaultInstanceForType() {
          return org.kontalk.client.Protocol.ReceiptMessage.Entry.getDefaultInstance();
        }
        
        public org.kontalk.client.Protocol.ReceiptMessage.Entry build() {
          org.kontalk.client.Protocol.ReceiptMessage.Entry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.kontalk.client.Protocol.ReceiptMessage.Entry buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.kontalk.client.Protocol.ReceiptMessage.Entry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.kontalk.client.Protocol.ReceiptMessage.Entry buildPartial() {
          org.kontalk.client.Protocol.ReceiptMessage.Entry result = new org.kontalk.client.Protocol.ReceiptMessage.Entry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.messageId_ = messageId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.status_ = status_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.timestamp_ = timestamp_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(org.kontalk.client.Protocol.ReceiptMessage.Entry other) {
          if (other == org.kontalk.client.Protocol.ReceiptMessage.Entry.getDefaultInstance()) return this;
          if (other.hasMessageId()) {
            setMessageId(other.getMessageId());
          }
          if (other.hasStatus()) {
            setStatus(other.getStatus());
          }
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasMessageId()) {
            
            return false;
          }
          if (!hasStatus()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                messageId_ = input.readBytes();
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus value = org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus.valueOf(rawValue);
                if (value != null) {
                  bitField0_ |= 0x00000002;
                  status_ = value;
                }
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                timestamp_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string message_id = 1;
        private java.lang.Object messageId_ = "";
        public boolean hasMessageId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getMessageId() {
          java.lang.Object ref = messageId_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            messageId_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setMessageId(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          messageId_ = value;
          
          return this;
        }
        public Builder clearMessageId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          messageId_ = getDefaultInstance().getMessageId();
          
          return this;
        }
        void setMessageId(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          messageId_ = value;
          
        }
        
        // required .ReceiptMessage.Entry.ReceiptStatus status = 2;
        private org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus status_ = org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus.STATUS_SUCCESS;
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus getStatus() {
          return status_;
        }
        public Builder setStatus(org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          status_ = value;
          
          return this;
        }
        public Builder clearStatus() {
          bitField0_ = (bitField0_ & ~0x00000002);
          status_ = org.kontalk.client.Protocol.ReceiptMessage.Entry.ReceiptStatus.STATUS_SUCCESS;
          
          return this;
        }
        
        // optional string timestamp = 3;
        private java.lang.Object timestamp_ = "";
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public String getTimestamp() {
          java.lang.Object ref = timestamp_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            timestamp_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setTimestamp(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          timestamp_ = value;
          
          return this;
        }
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000004);
          timestamp_ = getDefaultInstance().getTimestamp();
          
          return this;
        }
        void setTimestamp(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000004;
          timestamp_ = value;
          
        }
        
        // @@protoc_insertion_point(builder_scope:ReceiptMessage.Entry)
      }
      
      static {
        defaultInstance = new Entry(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:ReceiptMessage.Entry)
    }
    
    // repeated .ReceiptMessage.Entry entry = 1;
    public static final int ENTRY_FIELD_NUMBER = 1;
    private java.util.List<org.kontalk.client.Protocol.ReceiptMessage.Entry> entry_;
    public java.util.List<org.kontalk.client.Protocol.ReceiptMessage.Entry> getEntryList() {
      return entry_;
    }
    public java.util.List<? extends org.kontalk.client.Protocol.ReceiptMessage.EntryOrBuilder> 
        getEntryOrBuilderList() {
      return entry_;
    }
    public int getEntryCount() {
      return entry_.size();
    }
    public org.kontalk.client.Protocol.ReceiptMessage.Entry getEntry(int index) {
      return entry_.get(index);
    }
    public org.kontalk.client.Protocol.ReceiptMessage.EntryOrBuilder getEntryOrBuilder(
        int index) {
      return entry_.get(index);
    }
    
    private void initFields() {
      entry_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getEntryCount(); i++) {
        if (!getEntry(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < entry_.size(); i++) {
        output.writeMessage(1, entry_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < entry_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entry_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.ReceiptMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceiptMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceiptMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceiptMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceiptMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceiptMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceiptMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.ReceiptMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.ReceiptMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.ReceiptMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.ReceiptMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.ReceiptMessage, Builder>
        implements org.kontalk.client.Protocol.ReceiptMessageOrBuilder {
      // Construct using org.kontalk.client.Protocol.ReceiptMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.ReceiptMessage getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.ReceiptMessage.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.ReceiptMessage build() {
        org.kontalk.client.Protocol.ReceiptMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.ReceiptMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.ReceiptMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.ReceiptMessage buildPartial() {
        org.kontalk.client.Protocol.ReceiptMessage result = new org.kontalk.client.Protocol.ReceiptMessage(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = java.util.Collections.unmodifiableList(entry_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.entry_ = entry_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.ReceiptMessage other) {
        if (other == org.kontalk.client.Protocol.ReceiptMessage.getDefaultInstance()) return this;
        if (!other.entry_.isEmpty()) {
          if (entry_.isEmpty()) {
            entry_ = other.entry_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEntryIsMutable();
            entry_.addAll(other.entry_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getEntryCount(); i++) {
          if (!getEntry(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              org.kontalk.client.Protocol.ReceiptMessage.Entry.Builder subBuilder = org.kontalk.client.Protocol.ReceiptMessage.Entry.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEntry(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .ReceiptMessage.Entry entry = 1;
      private java.util.List<org.kontalk.client.Protocol.ReceiptMessage.Entry> entry_ =
        java.util.Collections.emptyList();
      private void ensureEntryIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entry_ = new java.util.ArrayList<org.kontalk.client.Protocol.ReceiptMessage.Entry>(entry_);
          bitField0_ |= 0x00000001;
         }
      }
      
      public java.util.List<org.kontalk.client.Protocol.ReceiptMessage.Entry> getEntryList() {
        return java.util.Collections.unmodifiableList(entry_);
      }
      public int getEntryCount() {
        return entry_.size();
      }
      public org.kontalk.client.Protocol.ReceiptMessage.Entry getEntry(int index) {
        return entry_.get(index);
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.ReceiptMessage.Entry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.set(index, value);
        
        return this;
      }
      public Builder setEntry(
          int index, org.kontalk.client.Protocol.ReceiptMessage.Entry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addEntry(org.kontalk.client.Protocol.ReceiptMessage.Entry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(value);
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.ReceiptMessage.Entry value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(index, value);
        
        return this;
      }
      public Builder addEntry(
          org.kontalk.client.Protocol.ReceiptMessage.Entry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(builderForValue.build());
        
        return this;
      }
      public Builder addEntry(
          int index, org.kontalk.client.Protocol.ReceiptMessage.Entry.Builder builderForValue) {
        ensureEntryIsMutable();
        entry_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllEntry(
          java.lang.Iterable<? extends org.kontalk.client.Protocol.ReceiptMessage.Entry> values) {
        ensureEntryIsMutable();
        super.addAll(values, entry_);
        
        return this;
      }
      public Builder clearEntry() {
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }
      public Builder removeEntry(int index) {
        ensureEntryIsMutable();
        entry_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:ReceiptMessage)
    }
    
    static {
      defaultInstance = new ReceiptMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ReceiptMessage)
  }
  
  public interface RegistrationRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string username = 1;
    boolean hasUsername();
    String getUsername();
  }
  public static final class RegistrationRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements RegistrationRequestOrBuilder {
    // Use RegistrationRequest.newBuilder() to construct.
    private RegistrationRequest(Builder builder) {
      super(builder);
    }
    private RegistrationRequest(boolean noInit) {}
    
    private static final RegistrationRequest defaultInstance;
    public static RegistrationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegistrationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string username = 1;
    public static final int USERNAME_FIELD_NUMBER = 1;
    private java.lang.Object username_;
    public boolean hasUsername() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          username_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      username_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasUsername()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUsernameBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUsernameBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.RegistrationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.RegistrationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.RegistrationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.RegistrationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.RegistrationRequest, Builder>
        implements org.kontalk.client.Protocol.RegistrationRequestOrBuilder {
      // Construct using org.kontalk.client.Protocol.RegistrationRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        username_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.RegistrationRequest getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.RegistrationRequest.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.RegistrationRequest build() {
        org.kontalk.client.Protocol.RegistrationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.RegistrationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.RegistrationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.RegistrationRequest buildPartial() {
        org.kontalk.client.Protocol.RegistrationRequest result = new org.kontalk.client.Protocol.RegistrationRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.username_ = username_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.RegistrationRequest other) {
        if (other == org.kontalk.client.Protocol.RegistrationRequest.getDefaultInstance()) return this;
        if (other.hasUsername()) {
          setUsername(other.getUsername());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasUsername()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              username_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string username = 1;
      private java.lang.Object username_ = "";
      public boolean hasUsername() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUsername(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        username_ = value;
        
        return this;
      }
      public Builder clearUsername() {
        bitField0_ = (bitField0_ & ~0x00000001);
        username_ = getDefaultInstance().getUsername();
        
        return this;
      }
      void setUsername(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        username_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:RegistrationRequest)
    }
    
    static {
      defaultInstance = new RegistrationRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RegistrationRequest)
  }
  
  public interface RegistrationResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .RegistrationResponse.RegistrationStatus status = 1;
    boolean hasStatus();
    org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus getStatus();
    
    // optional string token = 2;
    boolean hasToken();
    String getToken();
    
    // optional string sms_from = 3;
    boolean hasSmsFrom();
    String getSmsFrom();
    
    // optional string email_from = 4;
    boolean hasEmailFrom();
    String getEmailFrom();
  }
  public static final class RegistrationResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements RegistrationResponseOrBuilder {
    // Use RegistrationResponse.newBuilder() to construct.
    private RegistrationResponse(Builder builder) {
      super(builder);
    }
    private RegistrationResponse(boolean noInit) {}
    
    private static final RegistrationResponse defaultInstance;
    public static RegistrationResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegistrationResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum RegistrationStatus
        implements com.google.protobuf.Internal.EnumLite {
      STATUS_SUCCESS(0, 0),
      STATUS_ERROR(1, 1),
      STATUS_CONTINUE(2, 2),
      STATUS_INVALID_USERNAME(3, 3),
      ;
      
      public static final int STATUS_SUCCESS_VALUE = 0;
      public static final int STATUS_ERROR_VALUE = 1;
      public static final int STATUS_CONTINUE_VALUE = 2;
      public static final int STATUS_INVALID_USERNAME_VALUE = 3;
      
      
      public final int getNumber() { return value; }
      
      public static RegistrationStatus valueOf(int value) {
        switch (value) {
          case 0: return STATUS_SUCCESS;
          case 1: return STATUS_ERROR;
          case 2: return STATUS_CONTINUE;
          case 3: return STATUS_INVALID_USERNAME;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<RegistrationStatus>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RegistrationStatus>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RegistrationStatus>() {
              public RegistrationStatus findValueByNumber(int number) {
                return RegistrationStatus.valueOf(number);
              }
            };
      
      private final int value;
      
      private RegistrationStatus(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:RegistrationResponse.RegistrationStatus)
    }
    
    private int bitField0_;
    // required .RegistrationResponse.RegistrationStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus getStatus() {
      return status_;
    }
    
    // optional string token = 2;
    public static final int TOKEN_FIELD_NUMBER = 2;
    private java.lang.Object token_;
    public boolean hasToken() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          token_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string sms_from = 3;
    public static final int SMS_FROM_FIELD_NUMBER = 3;
    private java.lang.Object smsFrom_;
    public boolean hasSmsFrom() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getSmsFrom() {
      java.lang.Object ref = smsFrom_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          smsFrom_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSmsFromBytes() {
      java.lang.Object ref = smsFrom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        smsFrom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string email_from = 4;
    public static final int EMAIL_FROM_FIELD_NUMBER = 4;
    private java.lang.Object emailFrom_;
    public boolean hasEmailFrom() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getEmailFrom() {
      java.lang.Object ref = emailFrom_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          emailFrom_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEmailFromBytes() {
      java.lang.Object ref = emailFrom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        emailFrom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      status_ = org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus.STATUS_SUCCESS;
      token_ = "";
      smsFrom_ = "";
      emailFrom_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTokenBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSmsFromBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getEmailFromBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTokenBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSmsFromBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getEmailFromBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.RegistrationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.RegistrationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.RegistrationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.RegistrationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.RegistrationResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.RegistrationResponse, Builder>
        implements org.kontalk.client.Protocol.RegistrationResponseOrBuilder {
      // Construct using org.kontalk.client.Protocol.RegistrationResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        status_ = org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus.STATUS_SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        token_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        smsFrom_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        emailFrom_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.RegistrationResponse getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.RegistrationResponse.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.RegistrationResponse build() {
        org.kontalk.client.Protocol.RegistrationResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.RegistrationResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.RegistrationResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.RegistrationResponse buildPartial() {
        org.kontalk.client.Protocol.RegistrationResponse result = new org.kontalk.client.Protocol.RegistrationResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.token_ = token_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.smsFrom_ = smsFrom_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.emailFrom_ = emailFrom_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.RegistrationResponse other) {
        if (other == org.kontalk.client.Protocol.RegistrationResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasSmsFrom()) {
          setSmsFrom(other.getSmsFrom());
        }
        if (other.hasEmailFrom()) {
          setEmailFrom(other.getEmailFrom());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus value = org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              token_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              smsFrom_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              emailFrom_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .RegistrationResponse.RegistrationStatus status = 1;
      private org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus status_ = org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus.STATUS_SUCCESS;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus getStatus() {
        return status_;
      }
      public Builder setStatus(org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = org.kontalk.client.Protocol.RegistrationResponse.RegistrationStatus.STATUS_SUCCESS;
        
        return this;
      }
      
      // optional string token = 2;
      private java.lang.Object token_ = "";
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setToken(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        token_ = value;
        
        return this;
      }
      public Builder clearToken() {
        bitField0_ = (bitField0_ & ~0x00000002);
        token_ = getDefaultInstance().getToken();
        
        return this;
      }
      void setToken(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        token_ = value;
        
      }
      
      // optional string sms_from = 3;
      private java.lang.Object smsFrom_ = "";
      public boolean hasSmsFrom() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getSmsFrom() {
        java.lang.Object ref = smsFrom_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          smsFrom_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSmsFrom(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        smsFrom_ = value;
        
        return this;
      }
      public Builder clearSmsFrom() {
        bitField0_ = (bitField0_ & ~0x00000004);
        smsFrom_ = getDefaultInstance().getSmsFrom();
        
        return this;
      }
      void setSmsFrom(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        smsFrom_ = value;
        
      }
      
      // optional string email_from = 4;
      private java.lang.Object emailFrom_ = "";
      public boolean hasEmailFrom() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getEmailFrom() {
        java.lang.Object ref = emailFrom_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          emailFrom_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEmailFrom(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        emailFrom_ = value;
        
        return this;
      }
      public Builder clearEmailFrom() {
        bitField0_ = (bitField0_ & ~0x00000008);
        emailFrom_ = getDefaultInstance().getEmailFrom();
        
        return this;
      }
      void setEmailFrom(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        emailFrom_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:RegistrationResponse)
    }
    
    static {
      defaultInstance = new RegistrationResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:RegistrationResponse)
  }
  
  public interface ValidationRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string validation_code = 1;
    boolean hasValidationCode();
    String getValidationCode();
  }
  public static final class ValidationRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements ValidationRequestOrBuilder {
    // Use ValidationRequest.newBuilder() to construct.
    private ValidationRequest(Builder builder) {
      super(builder);
    }
    private ValidationRequest(boolean noInit) {}
    
    private static final ValidationRequest defaultInstance;
    public static ValidationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ValidationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string validation_code = 1;
    public static final int VALIDATION_CODE_FIELD_NUMBER = 1;
    private java.lang.Object validationCode_;
    public boolean hasValidationCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getValidationCode() {
      java.lang.Object ref = validationCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          validationCode_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getValidationCodeBytes() {
      java.lang.Object ref = validationCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        validationCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      validationCode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasValidationCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getValidationCodeBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getValidationCodeBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.ValidationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.ValidationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.ValidationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.ValidationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.ValidationRequest, Builder>
        implements org.kontalk.client.Protocol.ValidationRequestOrBuilder {
      // Construct using org.kontalk.client.Protocol.ValidationRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        validationCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.ValidationRequest getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.ValidationRequest.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.ValidationRequest build() {
        org.kontalk.client.Protocol.ValidationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.ValidationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.ValidationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.ValidationRequest buildPartial() {
        org.kontalk.client.Protocol.ValidationRequest result = new org.kontalk.client.Protocol.ValidationRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.validationCode_ = validationCode_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.ValidationRequest other) {
        if (other == org.kontalk.client.Protocol.ValidationRequest.getDefaultInstance()) return this;
        if (other.hasValidationCode()) {
          setValidationCode(other.getValidationCode());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasValidationCode()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              validationCode_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string validation_code = 1;
      private java.lang.Object validationCode_ = "";
      public boolean hasValidationCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getValidationCode() {
        java.lang.Object ref = validationCode_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          validationCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setValidationCode(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        validationCode_ = value;
        
        return this;
      }
      public Builder clearValidationCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        validationCode_ = getDefaultInstance().getValidationCode();
        
        return this;
      }
      void setValidationCode(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        validationCode_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:ValidationRequest)
    }
    
    static {
      defaultInstance = new ValidationRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ValidationRequest)
  }
  
  public interface ValidationResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .ValidationResponse.ValidationStatus status = 1;
    boolean hasStatus();
    org.kontalk.client.Protocol.ValidationResponse.ValidationStatus getStatus();
    
    // optional string token = 2;
    boolean hasToken();
    String getToken();
  }
  public static final class ValidationResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements ValidationResponseOrBuilder {
    // Use ValidationResponse.newBuilder() to construct.
    private ValidationResponse(Builder builder) {
      super(builder);
    }
    private ValidationResponse(boolean noInit) {}
    
    private static final ValidationResponse defaultInstance;
    public static ValidationResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ValidationResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum ValidationStatus
        implements com.google.protobuf.Internal.EnumLite {
      STATUS_SUCCESS(0, 0),
      STATUS_ERROR(1, 1),
      STATUS_FAILED(2, 2),
      ;
      
      public static final int STATUS_SUCCESS_VALUE = 0;
      public static final int STATUS_ERROR_VALUE = 1;
      public static final int STATUS_FAILED_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static ValidationStatus valueOf(int value) {
        switch (value) {
          case 0: return STATUS_SUCCESS;
          case 1: return STATUS_ERROR;
          case 2: return STATUS_FAILED;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<ValidationStatus>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ValidationStatus>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ValidationStatus>() {
              public ValidationStatus findValueByNumber(int number) {
                return ValidationStatus.valueOf(number);
              }
            };
      
      private final int value;
      
      private ValidationStatus(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:ValidationResponse.ValidationStatus)
    }
    
    private int bitField0_;
    // required .ValidationResponse.ValidationStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private org.kontalk.client.Protocol.ValidationResponse.ValidationStatus status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.kontalk.client.Protocol.ValidationResponse.ValidationStatus getStatus() {
      return status_;
    }
    
    // optional string token = 2;
    public static final int TOKEN_FIELD_NUMBER = 2;
    private java.lang.Object token_;
    public boolean hasToken() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          token_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      status_ = org.kontalk.client.Protocol.ValidationResponse.ValidationStatus.STATUS_SUCCESS;
      token_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTokenBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTokenBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.kontalk.client.Protocol.ValidationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.ValidationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kontalk.client.Protocol.ValidationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kontalk.client.Protocol.ValidationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kontalk.client.Protocol.ValidationResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.kontalk.client.Protocol.ValidationResponse, Builder>
        implements org.kontalk.client.Protocol.ValidationResponseOrBuilder {
      // Construct using org.kontalk.client.Protocol.ValidationResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        status_ = org.kontalk.client.Protocol.ValidationResponse.ValidationStatus.STATUS_SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000001);
        token_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.kontalk.client.Protocol.ValidationResponse getDefaultInstanceForType() {
        return org.kontalk.client.Protocol.ValidationResponse.getDefaultInstance();
      }
      
      public org.kontalk.client.Protocol.ValidationResponse build() {
        org.kontalk.client.Protocol.ValidationResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.kontalk.client.Protocol.ValidationResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.kontalk.client.Protocol.ValidationResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.kontalk.client.Protocol.ValidationResponse buildPartial() {
        org.kontalk.client.Protocol.ValidationResponse result = new org.kontalk.client.Protocol.ValidationResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.token_ = token_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.kontalk.client.Protocol.ValidationResponse other) {
        if (other == org.kontalk.client.Protocol.ValidationResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.kontalk.client.Protocol.ValidationResponse.ValidationStatus value = org.kontalk.client.Protocol.ValidationResponse.ValidationStatus.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              token_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .ValidationResponse.ValidationStatus status = 1;
      private org.kontalk.client.Protocol.ValidationResponse.ValidationStatus status_ = org.kontalk.client.Protocol.ValidationResponse.ValidationStatus.STATUS_SUCCESS;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.kontalk.client.Protocol.ValidationResponse.ValidationStatus getStatus() {
        return status_;
      }
      public Builder setStatus(org.kontalk.client.Protocol.ValidationResponse.ValidationStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = org.kontalk.client.Protocol.ValidationResponse.ValidationStatus.STATUS_SUCCESS;
        
        return this;
      }
      
      // optional string token = 2;
      private java.lang.Object token_ = "";
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setToken(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        token_ = value;
        
        return this;
      }
      public Builder clearToken() {
        bitField0_ = (bitField0_ & ~0x00000002);
        token_ = getDefaultInstance().getToken();
        
        return this;
      }
      void setToken(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        token_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:ValidationResponse)
    }
    
    static {
      defaultInstance = new ValidationResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:ValidationResponse)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
